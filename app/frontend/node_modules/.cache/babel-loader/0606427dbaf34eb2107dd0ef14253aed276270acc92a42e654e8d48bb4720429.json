{"ast":null,"code":"var _jsxFileName = \"/Users/xuximin/Desktop/499/year-long-project-team-6/app/frontend/src/pages/announcement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Announcement() {\n  _s();\n  var _location$state;\n  const [userId, setUserId] = useState('');\n  const location = useLocation();\n  const groupId = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.groupId;\n  const [title, setTitle] = useState('');\n  const [detail, setDetail] = useState('');\n  const [posts, setPosts] = useState([]);\n  const [selectedPost, setSelectedPost] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const sessionUser = sessionStorage.getItem('user');\n    if (!sessionUser) {\n      navigate('/login');\n    } else {\n      const user = JSON.parse(sessionUser);\n      setUserId(user.userid);\n      console.log(\"User Id: \" + user.userid);\n    }\n  }, []);\n  useEffect(() => {\n    console.log(groupId, userId);\n    if (groupId && userId) {\n      fetch(`http://localhost:5001/posts/${userId}/${groupId}`).then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        if (response.headers.get(\"content-type\").includes(\"application/json\")) {\n          return response.json();\n        }\n        throw new Error('Response not in JSON format');\n      }).then(data => {\n        setPosts(data);\n        console.log(data);\n      }).catch(error => console.error('Error fetching posts:', error));\n    }\n  }, [groupId, userId]);\n  const handleSubmit = event => {\n    event.preventDefault();\n    setIsSubmitting(true);\n    if (!title.trim()) {\n      window.alert('Please enter a title for the announcement.');\n      return;\n    }\n    if (!detail.trim()) {\n      window.alert('Please enter details for the announcement.');\n      return;\n    }\n    console.log({\n      title,\n      detail,\n      selectedPost\n    });\n  };\n  useEffect(() => {\n    if (isSubmitting) {\n      let announcementData = {\n        announcer: userId,\n        groupId,\n        title,\n        detail\n      };\n      if (selectedPost) {\n        announcementData.attachedPost = selectedPost;\n      }\n      fetch('http://localhost:5001/insertAnnouncement', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(announcementData)\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      }).then(data => {\n        console.log('Success:', data);\n        setIsSubmitting(false);\n        navigate(`/Members/${groupId}`);\n      }).catch(error => {\n        console.error('Error:', error);\n        setIsSubmitting(false);\n      });\n    }\n  }, [isSubmitting, userId, groupId, title, detail, selectedPost, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"announcement-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"heading\",\n        children: \"Create An Announcement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"announcement-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            className: \"form-label\",\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"title\",\n            type: \"text\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            required: true,\n            className: \"form-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"detail\",\n            className: \"form-label\",\n            children: \"Detail:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"detail\",\n            value: detail,\n            onChange: e => setDetail(e.target.value),\n            required: true,\n            className: \"form-textarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"attachedPost\",\n            className: \"form-label\",\n            children: \"Attach Post:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"attachedPost\",\n            value: selectedPost,\n            onChange: e => setSelectedPost(e.target.value),\n            className: \"form-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: post.post_id,\n              children: post.post_title\n            }, post.post_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          children: \"Post Announcement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n_s(Announcement, \"LMqNUfVAsOba4B11YLL021M3BoY=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Announcement;\nexport default Announcement;\nvar _c;\n$RefreshReg$(_c, \"Announcement\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","jsxDEV","_jsxDEV","Announcement","_s","_location$state","userId","setUserId","location","groupId","state","title","setTitle","detail","setDetail","posts","setPosts","selectedPost","setSelectedPost","isSubmitting","setIsSubmitting","navigate","sessionUser","sessionStorage","getItem","user","JSON","parse","userid","console","log","fetch","then","response","ok","Error","headers","get","includes","json","data","catch","error","handleSubmit","event","preventDefault","trim","window","alert","announcementData","announcer","attachedPost","method","body","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","value","onChange","e","target","required","map","post","post_id","post_title","_c","$RefreshReg$"],"sources":["/Users/xuximin/Desktop/499/year-long-project-team-6/app/frontend/src/pages/announcement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nfunction Announcement() {\n    const [userId, setUserId] = useState('');\n    const location = useLocation();\n    const groupId = location.state?.groupId;\n    const [title, setTitle] = useState('');\n    const [detail, setDetail] = useState('');\n    const [posts, setPosts] = useState([]);\n    const [selectedPost, setSelectedPost] = useState('');\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    const navigate = useNavigate();\n    useEffect(() => {\n        const sessionUser = sessionStorage.getItem('user');\n        if (!sessionUser) {\n            navigate('/login');\n        } else {\n            const user = JSON.parse(sessionUser);\n            setUserId(user.userid);\n            console.log(\"User Id: \" + user.userid);\n        }\n    }, []);\n\n    useEffect(() => {\n        console.log(groupId, userId)\n        if (groupId && userId) {\n            fetch(`http://localhost:5001/posts/${userId}/${groupId}`)\n                .then(response => {\n                    if (!response.ok) {\n                        throw new Error('Network response was not ok');\n                    }\n                    if (response.headers.get(\"content-type\").includes(\"application/json\")) {\n                        return response.json();\n                    }\n                    throw new Error('Response not in JSON format');\n                })\n                .then(data => {\n                    setPosts(data);\n                    console.log(data);\n                })\n                .catch(error => console.error('Error fetching posts:', error));\n\n        }\n    }, [groupId, userId]);\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        setIsSubmitting(true);\n        if (!title.trim()) {\n            window.alert('Please enter a title for the announcement.');\n            return;\n        }\n\n        if (!detail.trim()) {\n            window.alert('Please enter details for the announcement.');\n            return;\n        }\n        console.log({ title, detail, selectedPost });\n    };\n    useEffect(() => {\n        if (isSubmitting) {\n            let announcementData = {\n                announcer: userId,\n                groupId,\n                title,\n                detail\n            };\n\n            if (selectedPost) {\n                announcementData.attachedPost = selectedPost;\n            }\n\n            fetch('http://localhost:5001/insertAnnouncement', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(announcementData),\n            })\n                .then(response => {\n                    if (!response.ok) {\n                        throw new Error('Network response was not ok');\n                    }\n                    return response.json();\n                })\n                .then(data => {\n                    console.log('Success:', data);\n                    setIsSubmitting(false);\n                    navigate(`/Members/${groupId}`);\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                    setIsSubmitting(false);\n                });\n        }\n    }, [isSubmitting, userId, groupId, title, detail, selectedPost, navigate]);\n\n\n    return (\n        <div className='announcement-container'>\n            <div className=\"form-container\">\n                <h2 className=\"heading\">Create An Announcement</h2>\n                <form onSubmit={handleSubmit} className=\"announcement-form\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"title\" className=\"form-label\">Title:</label>\n                        <input\n                            id=\"title\"\n                            type=\"text\"\n                            value={title}\n                            onChange={(e) => setTitle(e.target.value)}\n                            required\n                            className=\"form-input\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"detail\" className=\"form-label\">Detail:</label>\n                        <textarea\n                            id=\"detail\"\n                            value={detail}\n                            onChange={(e) => setDetail(e.target.value)}\n                            required\n                            className=\"form-textarea\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"attachedPost\" className=\"form-label\">Attach Post:</label>\n                        <select\n                            id=\"attachedPost\"\n                            value={selectedPost}\n                            onChange={(e) => setSelectedPost(e.target.value)}\n                            className=\"form-select\"\n                        >\n                            <option value=\"\">Select a post</option>\n                            {posts.map(post => (\n                                <option key={post.post_id} value={post.post_id}>{post.post_title}</option>\n                            ))}\n                        </select>\n                    </div>\n                    <button type=\"submit\" className=\"submit-button\">Post Announcement</button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default Announcement;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}