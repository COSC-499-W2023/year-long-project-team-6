{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROG\\\\Desktop\\\\COSC499\\\\year-long-project-team-6\\\\app\\\\frontend\\\\src\\\\pages\\\\view-announce.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport '../component/CSS/viewannouncement.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ViewAnnouncement() {\n  _s();\n  var _location$state;\n  const navigate = useNavigate();\n  const [announcements, setAnnouncements] = useState([]);\n  const location = useLocation();\n  const groupId = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.groupId;\n  const [postTitles, setPostTitles] = useState({});\n  console.log(\"groupid\", groupId);\n  useEffect(() => {\n    fetch(`http://localhost:5001/viewAnnouncement/${groupId}`).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setAnnouncements(data);\n    }).catch(error => console.error('Error fetching announcements:', error));\n  }, [groupId]);\n  const handleView = postId => {\n    navigate(`/Video/${postId}`);\n  };\n  const fetchPostTitle = postId => {\n    fetch(`http://localhost:5001/post/${postId}`).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setPostTitles(prevTitles => ({\n        ...prevTitles,\n        [postId]: data.post_title\n      }));\n    }).catch(error => console.error('Error fetching post:', error));\n  };\n  useEffect(() => {\n    announcements.forEach(announcement => {\n      if (announcement.attached_post) {\n        fetchPostTitle(announcement.attached_post);\n      }\n    });\n  }, [announcements]); // Depend on announcements so this runs when announcements change\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"announce\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Announcements\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), announcements.map((announcement, index) => /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"announcetab\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"announcetitle\",\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: announcement.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"announce-date-row\",\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(announcement.announce_date).toLocaleString('en-US', {\n              month: 'long',\n              day: 'numeric',\n              year: 'numeric',\n              hour: 'numeric',\n              minute: 'numeric',\n              second: 'numeric',\n              hour12: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"announcedetail\",\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: announcement.detail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: announcement.attached_post ? /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => handleView(announcement.attached_post),\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Post: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 13\n              }, this), \" \", postTitles[announcement.attached_post] || 'Loading...']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 9\n            }, this) : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(ViewAnnouncement, \"F/nivll7T/C4NoEuZ1iBjiRH/FA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ViewAnnouncement;\nexport default ViewAnnouncement;\nvar _c;\n$RefreshReg$(_c, \"ViewAnnouncement\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","jsxDEV","_jsxDEV","ViewAnnouncement","_s","_location$state","navigate","announcements","setAnnouncements","location","groupId","state","postTitles","setPostTitles","console","log","fetch","then","response","ok","Error","json","data","catch","error","handleView","postId","fetchPostTitle","prevTitles","post_title","forEach","announcement","attached_post","id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","className","title","Date","announce_date","toLocaleString","month","day","year","hour","minute","second","hour12","detail","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ROG/Desktop/COSC499/year-long-project-team-6/app/frontend/src/pages/view-announce.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate,useLocation } from 'react-router-dom';\r\nimport '../component/CSS/viewannouncement.css';\r\n\r\nfunction ViewAnnouncement() {\r\n    const navigate = useNavigate();\r\n    const [announcements, setAnnouncements] = useState([]);\r\n    const location = useLocation();\r\n    const groupId = location.state?.groupId; \r\n    const [postTitles, setPostTitles] = useState({});\r\n\r\n\r\n    console.log(\"groupid\",groupId);\r\n    useEffect(() => {\r\n        fetch(`http://localhost:5001/viewAnnouncement/${groupId}`)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                setAnnouncements(data);\r\n            })\r\n            .catch(error => console.error('Error fetching announcements:', error));\r\n    }, [groupId]);\r\nconst handleView = (postId) =>{\r\n    navigate(`/Video/${postId}`);\r\n}\r\n    const fetchPostTitle = (postId) => {\r\n        fetch(`http://localhost:5001/post/${postId}`)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                setPostTitles(prevTitles => ({ ...prevTitles, [postId]: data.post_title }));\r\n            })\r\n            .catch(error => console.error('Error fetching post:', error));\r\n    };\r\n    useEffect(() => {\r\n        announcements.forEach(announcement => {\r\n            if (announcement.attached_post) {\r\n                fetchPostTitle(announcement.attached_post);\r\n            }\r\n        });\r\n    }, [announcements]); // Depend on announcements so this runs when announcements change\r\n    \r\n    \r\n    return (\r\n        <div id='announce'>\r\n            <h2>Announcements</h2>\r\n    {announcements.map((announcement, index) => (\r\n        <table key={index} className='announcetab'>\r\n            <tbody>\r\n                <tr className='announcetitle'>\r\n                    <td>{announcement.title}</td>\r\n                </tr>\r\n                <tr className=\"announce-date-row\">\r\n            <td>{new Date(announcement.announce_date).toLocaleString('en-US', {\r\n            month: 'long',\r\n            day: 'numeric',\r\n            year: 'numeric',\r\n            hour: 'numeric',\r\n            minute: 'numeric',\r\n            second: 'numeric',\r\n            hour12: true\r\n        })}</td>\r\n        </tr>\r\n                <tr className='announcedetail'>\r\n\r\n                    <td>{announcement.detail}</td>\r\n                </tr>\r\n                <tr>\r\n                <td>\r\n                {announcement.attached_post ? (\r\n        <span onClick={() => handleView(announcement.attached_post)}>\r\n            <b>Post: </b> {postTitles[announcement.attached_post] || 'Loading...'}\r\n        </span>\r\n    ) : \"\"}\r\n</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ViewAnnouncement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}