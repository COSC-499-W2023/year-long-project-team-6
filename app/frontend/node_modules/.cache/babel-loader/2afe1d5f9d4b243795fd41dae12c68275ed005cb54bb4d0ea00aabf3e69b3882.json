{"ast":null,"code":"var _jsxFileName = \"F:\\\\GitLab\\\\year-long-project-team-6\\\\app\\\\frontend\\\\src\\\\pages\\\\Post.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"../component/CSS/post.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { initializeWebRTC, cleanupWebRTC } from './webrtc';\nimport { uploadVideo } from './webrtc';\nimport { wait } from \"@testing-library/user-event/dist/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PostPage() {\n  _s();\n  const [showWebRTC, setShowWebRTC] = useState(false);\n  const [userId, setUserId] = useState(\"\");\n  const [selectedGroup, setSelectedGroup] = useState(\"\");\n  const [postHistory, setPostHistory] = useState([]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const signalingClientRef = useRef(null);\n  const peerConnectionRef = useRef(null);\n  const localView = useRef(null);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [recordedChunks, setRecordedChunks] = useState([]);\n  const navigate = useNavigate();\n  const [isRecordingStopped, setIsRecordingStopped] = useState(false);\n  const [recordedVideo, setRecordedVideo] = useState(null);\n  const channelARN = 'arn:aws:kinesisvideo:us-east-1:466618866658:channel/webrtc-499/1701571372732';\n  useEffect(() => {\n    const sessionUser = sessionStorage.getItem('user');\n    console.log(\"Sessopm User: \" + sessionUser);\n    if (!sessionUser) {\n      navigate('/login');\n    } else {\n      const user = JSON.parse(sessionUser);\n      setUserId(user.userid);\n      console.log(\"User Id: \" + user.userid);\n    }\n  }, []);\n  useEffect(() => {\n    const sessionUser = sessionStorage.getItem('user');\n    console.log(\"Sessopm User: \" + sessionUser);\n    if (!sessionUser) {\n      navigate('/login');\n    } else {\n      const user = JSON.parse(sessionUser);\n      setUserId(user.userid);\n      console.log(\"User Id: \" + user.userid);\n    }\n  }, []);\n  useEffect(() => {\n    if (userId) {\n      fetch(`http://localhost:5001/post-history/${userId}`).then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return response.json();\n      }).then(data => {\n        const arr = [];\n        for (let i in data) {\n          let o = {};\n          o[i] = data[i];\n          arr.push(o);\n        }\n        console.log(arr[0].data);\n        setPostHistory(arr[0].data);\n      }).catch(error => console.error('Error fetching post history:', error));\n    }\n  }, [userId]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    let videoKey = '';\n    if (recordedVideo) {\n      try {\n        const uploadResult = await uploadVideo(recordedVideo, formData.get('post_title')); // Modify this function as needed\n        console.log('Video uploaded successfully:', uploadResult);\n        videoKey = uploadResult.key;\n      } catch (uploadError) {\n        console.error('Failed to upload video:', uploadError);\n        return; // Stop the submission if the upload fails\n      }\n    }\n\n    const postData = {\n      post_title: formData.get('post_title'),\n      post_text: formData.get('post_text'),\n      s3_content_key: videoKey,\n      userid: userId\n    };\n    console.log(\"postData to be sent:\", postData); // Add this line for debugging\n\n    fetch('http://localhost:5001/add-post', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(postData)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.text();\n    }).then(data => {\n      console.log('Success:', data);\n      navigate('/');\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  useEffect(() => {\n    console.log('recordedChunks updated:', recordedChunks);\n  }, [recordedChunks]);\n  // Temporary array to hold recorded chunks, outside of the function\n  let tempRecordedChunks = [];\n  const handleTogglePlay = async () => {\n    console.log('Click - isPlaying:', isPlaying, 'Refs:', localView.current);\n    if (!isPlaying) {\n      setTimeout(async () => {\n        if (localView.current) {\n          try {\n            const webrtc = await initializeWebRTC(channelARN, localView.current);\n            signalingClientRef.current = webrtc.signalingClient;\n            peerConnectionRef.current = webrtc.peerConnection;\n\n            // Initialize MediaRecorder here\n            const stream = localView.current.srcObject; // Assuming this is your local stream\n            console.log('stream', stream);\n            const recorder = new MediaRecorder(stream);\n            setMediaRecorder(recorder);\n            recorder.ondataavailable = event => {\n              if (event.data.size > 0) {\n                tempRecordedChunks.push(event.data);\n              }\n            };\n            recorder.onstop = async () => {\n              const blob = new Blob(tempRecordedChunks, {\n                type: 'video/webm'\n              });\n              setRecordedVideo(blob); // Assuming you have a state called recordedVideo\n              tempRecordedChunks = [];\n            };\n            setShowWebRTC(true);\n            recorder.start();\n          } catch (error) {\n            console.error('Error initializing WebRTC: ', error);\n          }\n        } else {\n          console.log('Refs are not set:', localView.current);\n        }\n      }, 100);\n    } else {\n      if (mediaRecorder) {\n        mediaRecorder.stop();\n      }\n      cleanupWebRTC(signalingClientRef.current, peerConnectionRef.current);\n      signalingClientRef.current = null;\n      peerConnectionRef.current = null;\n      setShowWebRTC(false);\n    }\n    setIsPlaying(!isPlaying);\n  };\n  function handleGroupChange(event) {\n    setSelectedGroup(event.target.value);\n  }\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toISOString().split('T')[0];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"send\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Send Your Post Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"input\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"main\",\n            className: \"main\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"videoContainer\",\n              children: [isPlaying && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"video\", {\n                  ref: localView,\n                  style: {\n                    width: '640px'\n                  },\n                  autoPlay: true,\n                  playsInline: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n                id: \"record_button\",\n                type: \"button\",\n                onClick: handleTogglePlay,\n                children: isPlaying ? 'Stop' : 'Start'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"EnterText\",\n              id: \"text_one\",\n              children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n                children: \"Name your new video\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"VName\",\n                placeholder: \"Video Name\",\n                name: \"post_title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"EnterText\",\n              id: \"text_two\",\n              children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n                children: \"Description of Your Video\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"Description\",\n                placeholder: \"Describe your video\",\n                name: \"post_text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"button\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              value: \"Submit\",\n              name: \"submit\",\n              id: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"HistroyBar\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"histroyTable\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"History\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                id: \"Sort\",\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"order\",\n                  name: \"order\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Des\",\n                    children: \"Descending\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Asc\",\n                    children: \"Ascending\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: postHistory.map((post, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                id: \"img\",\n                children: `${post.post_title}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                id: \"date\",\n                children: formatDate(post.post_date)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 9\n  }, this);\n}\n_s(PostPage, \"nnNR2eIyTkgzQwrN30fBZR2YrHI=\", false, function () {\n  return [useNavigate];\n});\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useNavigate","initializeWebRTC","cleanupWebRTC","uploadVideo","wait","jsxDEV","_jsxDEV","Fragment","_Fragment","PostPage","_s","showWebRTC","setShowWebRTC","userId","setUserId","selectedGroup","setSelectedGroup","postHistory","setPostHistory","isPlaying","setIsPlaying","signalingClientRef","peerConnectionRef","localView","mediaRecorder","setMediaRecorder","recordedChunks","setRecordedChunks","navigate","isRecordingStopped","setIsRecordingStopped","recordedVideo","setRecordedVideo","channelARN","sessionUser","sessionStorage","getItem","console","log","user","JSON","parse","userid","fetch","then","response","ok","Error","status","json","data","arr","i","o","push","catch","error","handleSubmit","event","preventDefault","formData","FormData","target","videoKey","uploadResult","get","key","uploadError","postData","post_title","post_text","s3_content_key","method","headers","body","stringify","text","tempRecordedChunks","handleTogglePlay","current","setTimeout","webrtc","signalingClient","peerConnection","stream","srcObject","recorder","MediaRecorder","ondataavailable","size","onstop","blob","Blob","type","start","stop","handleGroupChange","value","formatDate","dateString","date","Date","toISOString","split","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","ref","style","width","autoPlay","playsInline","onClick","placeholder","name","map","post","index","post_date","_c","$RefreshReg$"],"sources":["F:/GitLab/year-long-project-team-6/app/frontend/src/pages/Post.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"../component/CSS/post.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { initializeWebRTC, cleanupWebRTC } from './webrtc';\r\nimport { uploadVideo } from './webrtc';\r\nimport { wait } from \"@testing-library/user-event/dist/utils\";\r\nfunction PostPage() {\r\n    const [showWebRTC, setShowWebRTC] = useState(false);\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [selectedGroup, setSelectedGroup] = useState(\"\");\r\n    const [postHistory, setPostHistory] = useState([]);\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n    const signalingClientRef = useRef(null);\r\n    const peerConnectionRef = useRef(null);\r\n    const localView = useRef(null);\r\n    const [mediaRecorder, setMediaRecorder] = useState(null);\r\n    const [recordedChunks, setRecordedChunks] = useState([]);\r\n    const navigate = useNavigate();\r\n    const [isRecordingStopped, setIsRecordingStopped] = useState(false);\r\n    const [recordedVideo, setRecordedVideo] = useState(null);\r\n\r\n\r\n\r\n\r\n\r\n    const channelARN = 'arn:aws:kinesisvideo:us-east-1:466618866658:channel/webrtc-499/1701571372732';\r\n    useEffect(() => {\r\n        const sessionUser = sessionStorage.getItem('user');\r\n        console.log(\"Sessopm User: \" + sessionUser);\r\n        if (!sessionUser) {\r\n            navigate('/login');\r\n        } else {\r\n            const user = JSON.parse(sessionUser);\r\n            setUserId(user.userid);\r\n            console.log(\"User Id: \" + user.userid);\r\n        }\r\n    }, []);\r\n    useEffect(() => {\r\n        const sessionUser = sessionStorage.getItem('user');\r\n        console.log(\"Sessopm User: \" + sessionUser);\r\n        if (!sessionUser) {\r\n            navigate('/login');\r\n        } else {\r\n            const user = JSON.parse(sessionUser);\r\n            setUserId(user.userid);\r\n            console.log(\"User Id: \" + user.userid);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (userId) {\r\n            fetch(`http://localhost:5001/post-history/${userId}`)\r\n                .then(response => {\r\n                    if (!response.ok) {\r\n                        throw new Error(`HTTP error! status: ${response.status}`);\r\n                    }\r\n                    return response.json();\r\n                })\r\n                .then(data => {\r\n                    const arr = [];\r\n                    for (let i in data) {\r\n                        let o = {};\r\n                        o[i] = data[i];\r\n                        arr.push(o);\r\n                    }\r\n                    console.log(arr[0].data);\r\n                    setPostHistory(arr[0].data);\r\n                })\r\n                .catch(error => console.error('Error fetching post history:', error));\r\n        }\r\n    }, [userId]);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const formData = new FormData(event.target);\r\n        let videoKey = '';\r\n\r\n        if (recordedVideo) {\r\n            try {\r\n                const uploadResult = await uploadVideo(recordedVideo, formData.get('post_title')); // Modify this function as needed\r\n                console.log('Video uploaded successfully:', uploadResult);\r\n                videoKey = uploadResult.key;\r\n            } catch (uploadError) {\r\n                console.error('Failed to upload video:', uploadError);\r\n                return; // Stop the submission if the upload fails\r\n            }\r\n        }\r\n        const postData = {\r\n            post_title: formData.get('post_title'),\r\n            post_text: formData.get('post_text'),\r\n            s3_content_key: videoKey,\r\n            userid: userId\r\n        };\r\n        console.log(\"postData to be sent:\", postData); // Add this line for debugging\r\n\r\n        fetch('http://localhost:5001/add-post', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(postData)\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.text();\r\n            })\r\n            .then(data => {\r\n                console.log('Success:', data);\r\n                navigate('/');\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n            });\r\n    }\r\n    useEffect(() => {\r\n        console.log('recordedChunks updated:', recordedChunks);\r\n    }, [recordedChunks]);\r\n    // Temporary array to hold recorded chunks, outside of the function\r\n    let tempRecordedChunks = [];\r\n\r\n    const handleTogglePlay = async () => {\r\n        console.log('Click - isPlaying:', isPlaying, 'Refs:', localView.current);\r\n\r\n        if (!isPlaying) {\r\n            setTimeout(async () => {\r\n                if (localView.current) {\r\n                    try {\r\n                        const webrtc = await initializeWebRTC(channelARN, localView.current);\r\n                        signalingClientRef.current = webrtc.signalingClient;\r\n                        peerConnectionRef.current = webrtc.peerConnection;\r\n\r\n                        // Initialize MediaRecorder here\r\n                        const stream = localView.current.srcObject; // Assuming this is your local stream\r\n                        console.log('stream', stream);\r\n\r\n                        const recorder = new MediaRecorder(stream);\r\n                        setMediaRecorder(recorder);\r\n\r\n                        recorder.ondataavailable = (event) => {\r\n                            if (event.data.size > 0) {\r\n                                tempRecordedChunks.push(event.data);\r\n                            }\r\n                        };\r\n\r\n                        recorder.onstop = async () => {\r\n                            const blob = new Blob(tempRecordedChunks, { type: 'video/webm' });\r\n                            setRecordedVideo(blob); // Assuming you have a state called recordedVideo\r\n                            tempRecordedChunks = [];\r\n                        };\r\n\r\n\r\n                        setShowWebRTC(true);\r\n                        recorder.start();\r\n\r\n                    } catch (error) {\r\n                        console.error('Error initializing WebRTC: ', error);\r\n                    }\r\n                } else {\r\n                    console.log('Refs are not set:', localView.current);\r\n                }\r\n            }, 100);\r\n        } else {\r\n            if (mediaRecorder) {\r\n                mediaRecorder.stop();\r\n            }\r\n            cleanupWebRTC(signalingClientRef.current, peerConnectionRef.current);\r\n            signalingClientRef.current = null;\r\n            peerConnectionRef.current = null;\r\n            setShowWebRTC(false);\r\n        }\r\n        setIsPlaying(!isPlaying);\r\n    };\r\n\r\n    function handleGroupChange(event) {\r\n        setSelectedGroup(event.target.value);\r\n    }\r\n    const formatDate = (dateString) => {\r\n        const date = new Date(dateString);\r\n        return date.toISOString().split('T')[0];\r\n    };\r\n    return (\r\n        <div id='page'>\r\n            <div id=\"send\">\r\n                <h2>Send Your Post Here</h2>\r\n            </div>\r\n            <div className=\"flex-container\">\r\n                <div id=\"input\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div id=\"main\" className=\"main\">\r\n                            <div id=\"videoContainer\">\r\n                                {isPlaying && (\r\n                                    <>\r\n                                        <video ref={localView} style={{ width: '640px' }} autoPlay playsInline />\r\n\r\n                                    </>\r\n                                )}\r\n                                <button id=\"record_button\" type='button' onClick={handleTogglePlay}>{isPlaying ? 'Stop' : 'Start'}</button>\r\n                            </div>\r\n\r\n                            <div className=\"EnterText\" id=\"text_one\">\r\n                                <legend>Name your new video</legend>\r\n                                <input type=\"text\" id=\"VName\" placeholder=\"Video Name\" name=\"post_title\" />\r\n                            </div>\r\n                            {/*\r\n                            <div className=\"EnterText\">\r\n                                <legend>Choose a Group</legend>\r\n                                <select id=\"GName\" name=\"GName\" value={selectedGroup} onChange={handleGroupChange}>\r\n                                    <option value=\"\"></option>\r\n                                    <option value=\"Sender\">Sender</option>\r\n                                    <option value=\"Doctor\">Doctor</option>\r\n                                    <option value=\"Professor\">Professor</option>\r\n                                </select>\r\n                            </div>\r\n                        */}\r\n                            <div className=\"EnterText\" id=\"text_two\">\r\n                                <legend>Description of Your Video</legend>\r\n                                <input type=\"text\" id=\"Description\" placeholder=\"Describe your video\" name=\"post_text\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div id=\"button\">\r\n                            <button type=\"submit\" value=\"Submit\" name=\"submit\" id=\"submit\">Submit</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div id=\"HistroyBar\">\r\n                    <table id=\"histroyTable\">\r\n                        <thead>\r\n                            <tr>\r\n                                <td>History</td>\r\n                                <td id=\"Sort\">\r\n                                    <select id=\"order\" name=\"order\">\r\n                                        <option value=\"Des\">Descending</option>\r\n                                        <option value=\"Asc\">Ascending</option>\r\n                                    </select>\r\n                                </td>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {postHistory.map((post, index) => (\r\n                                <tr key={index}>\r\n                                    <td id=\"img\">\r\n                                        {`${post.post_title}`}\r\n                                    </td>\r\n                                    <td id=\"date\">{formatDate(post.post_date)}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}