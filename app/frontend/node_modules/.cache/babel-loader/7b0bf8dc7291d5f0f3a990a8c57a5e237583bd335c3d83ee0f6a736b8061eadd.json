{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SigV4RequestSigner = void 0;\nvar tslib_1 = require(\"tslib\");\nvar isomorphic_webcrypto_1 = tslib_1.__importDefault(require(\"isomorphic-webcrypto\"));\nvar utils_1 = require(\"./internal/utils\");\n/**\r\n * Utility class for SigV4 signing requests. The AWS SDK cannot be used for this purpose because it does not have support for WebSocket endpoints.\r\n */\nvar SigV4RequestSigner = /** @class */function () {\n  function SigV4RequestSigner(region, credentials, service) {\n    if (service === void 0) {\n      service = SigV4RequestSigner.DEFAULT_SERVICE;\n    }\n    this.region = region;\n    this.credentials = credentials;\n    this.service = service;\n  }\n  /**\r\n   * Creates a SigV4 signed WebSocket URL for the given host/endpoint with the given query params.\r\n   *\r\n   * @param endpoint The WebSocket service endpoint including protocol, hostname, and path (if applicable).\r\n   * @param queryParams Query parameters to include in the URL.\r\n   * @param date Date to use for request signing. Defaults to NOW.\r\n   *\r\n   * Implementation note: Query parameters should be in alphabetical order.\r\n   *\r\n   * Note from AWS docs: \"When you add the X-Amz-Security-Token parameter to the query string, some services require that you include this parameter in the\r\n   * canonical (signed) request. For other services, you add this parameter at the end, after you calculate the signature. For details, see the API reference\r\n   * documentation for that service.\" KVS Signaling Service requires that the session token is added to the canonical request.\r\n   *\r\n   * @see https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html\r\n   * @see https://gist.github.com/prestomation/24b959e51250a8723b9a5a4f70dcae08\r\n   */\n  SigV4RequestSigner.prototype.getSignedURL = function (endpoint, queryParams, date) {\n    if (date === void 0) {\n      date = new Date();\n    }\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var datetimeString, dateString, protocol, urlProtocol, pathStartIndex, host, path, signedHeaders, method, credentialScope, canonicalQueryParams, canonicalQueryString, canonicalHeaders, canonicalHeadersString, payloadHash, canonicalRequest, canonicalRequestHash, stringToSign, signingKey, signature, _a, _b, signedQueryParams;\n      return tslib_1.__generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            if (!(typeof this.credentials.getPromise === 'function')) return [3 /*break*/, 2];\n            return [4 /*yield*/, this.credentials.getPromise()];\n          case 1:\n            _c.sent();\n            _c.label = 2;\n          case 2:\n            (0, utils_1.validateValueNonNil)(this.credentials.accessKeyId, 'credentials.accessKeyId');\n            (0, utils_1.validateValueNonNil)(this.credentials.secretAccessKey, 'credentials.secretAccessKey');\n            datetimeString = SigV4RequestSigner.getDateTimeString(date);\n            dateString = SigV4RequestSigner.getDateString(date);\n            protocol = 'wss';\n            urlProtocol = \"\".concat(protocol, \"://\");\n            if (!endpoint.startsWith(urlProtocol)) {\n              throw new Error(\"Endpoint '\".concat(endpoint, \"' is not a secure WebSocket endpoint. It should start with '\").concat(urlProtocol, \"'.\"));\n            }\n            if (endpoint.includes('?')) {\n              throw new Error(\"Endpoint '\".concat(endpoint, \"' should not contain any query parameters.\"));\n            }\n            pathStartIndex = endpoint.indexOf('/', urlProtocol.length);\n            if (pathStartIndex < 0) {\n              host = endpoint.substring(urlProtocol.length);\n              path = '/';\n            } else {\n              host = endpoint.substring(urlProtocol.length, pathStartIndex);\n              path = endpoint.substring(pathStartIndex);\n            }\n            signedHeaders = ['host'].join(';');\n            method = 'GET';\n            credentialScope = dateString + '/' + this.region + '/' + this.service + '/' + 'aws4_request';\n            canonicalQueryParams = Object.assign({}, queryParams, {\n              'X-Amz-Algorithm': SigV4RequestSigner.DEFAULT_ALGORITHM,\n              'X-Amz-Credential': this.credentials.accessKeyId + '/' + credentialScope,\n              'X-Amz-Date': datetimeString,\n              'X-Amz-Expires': '299',\n              'X-Amz-SignedHeaders': signedHeaders\n            });\n            if (this.credentials.sessionToken) {\n              Object.assign(canonicalQueryParams, {\n                'X-Amz-Security-Token': this.credentials.sessionToken\n              });\n            }\n            canonicalQueryString = SigV4RequestSigner.createQueryString(canonicalQueryParams);\n            canonicalHeaders = {\n              host: host\n            };\n            canonicalHeadersString = SigV4RequestSigner.createHeadersString(canonicalHeaders);\n            return [4 /*yield*/, SigV4RequestSigner.sha256('')];\n          case 3:\n            payloadHash = _c.sent();\n            canonicalRequest = [method, path, canonicalQueryString, canonicalHeadersString, signedHeaders, payloadHash].join('\\n');\n            return [4 /*yield*/, SigV4RequestSigner.sha256(canonicalRequest)];\n          case 4:\n            canonicalRequestHash = _c.sent();\n            stringToSign = [SigV4RequestSigner.DEFAULT_ALGORITHM, datetimeString, credentialScope, canonicalRequestHash].join('\\n');\n            return [4 /*yield*/, this.getSignatureKey(dateString)];\n          case 5:\n            signingKey = _c.sent();\n            _b = (_a = SigV4RequestSigner).toHex;\n            return [4 /*yield*/, SigV4RequestSigner.hmac(signingKey, stringToSign)];\n          case 6:\n            return [4 /*yield*/, _b.apply(_a, [_c.sent()])];\n          case 7:\n            signature = _c.sent();\n            signedQueryParams = Object.assign({}, canonicalQueryParams, {\n              'X-Amz-Signature': signature\n            });\n            // Create signed URL\n            return [2 /*return*/, protocol + '://' + host + path + '?' + SigV4RequestSigner.createQueryString(signedQueryParams)];\n        }\n      });\n    });\n  };\n  /**\r\n   * Utility method for generating the key to use for calculating the signature. This combines together the date string, region, service name, and secret\r\n   * access key.\r\n   *\r\n   * @see https://docs.aws.amazon.com/general/latest/gr/sigv4-calculate-signature.html\r\n   */\n  SigV4RequestSigner.prototype.getSignatureKey = function (dateString) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var kDate, kRegion, kService;\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, SigV4RequestSigner.hmac('AWS4' + this.credentials.secretAccessKey, dateString)];\n          case 1:\n            kDate = _a.sent();\n            return [4 /*yield*/, SigV4RequestSigner.hmac(kDate, this.region)];\n          case 2:\n            kRegion = _a.sent();\n            return [4 /*yield*/, SigV4RequestSigner.hmac(kRegion, this.service)];\n          case 3:\n            kService = _a.sent();\n            return [4 /*yield*/, SigV4RequestSigner.hmac(kService, 'aws4_request')];\n          case 4:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  /**\r\n   * Utility method for converting a map of headers to a string for signing.\r\n   */\n  SigV4RequestSigner.createHeadersString = function (headers) {\n    return Object.keys(headers).map(function (header) {\n      return \"\".concat(header, \":\").concat(headers[header], \"\\n\");\n    }).join();\n  };\n  /**\r\n   * Utility method for converting a map of query parameters to a string with the parameter names sorted.\r\n   */\n  SigV4RequestSigner.createQueryString = function (queryParams) {\n    return Object.keys(queryParams).sort().map(function (key) {\n      return \"\".concat(key, \"=\").concat(encodeURIComponent(queryParams[key]));\n    }).join('&');\n  };\n  /**\r\n   * Gets a datetime string for the given date to use for signing. For example: \"20190927T165210Z\"\r\n   * @param date\r\n   */\n  SigV4RequestSigner.getDateTimeString = function (date) {\n    return date.toISOString().replace(/\\.\\d{3}Z$/, 'Z').replace(/[:\\-]/g, '');\n  };\n  /**\r\n   * Gets a date string for the given date to use for signing. For example: \"20190927\"\r\n   * @param date\r\n   */\n  SigV4RequestSigner.getDateString = function (date) {\n    return this.getDateTimeString(date).substring(0, 8);\n  };\n  SigV4RequestSigner.sha256 = function (message) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var hashBuffer;\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, isomorphic_webcrypto_1.default.subtle.digest({\n              name: 'SHA-256'\n            }, this.toUint8Array(message))];\n          case 1:\n            hashBuffer = _a.sent();\n            return [2 /*return*/, this.toHex(hashBuffer)];\n        }\n      });\n    });\n  };\n  SigV4RequestSigner.hmac = function (key, message) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      var keyBuffer, messageBuffer, cryptoKey;\n      return tslib_1.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            keyBuffer = typeof key === 'string' ? this.toUint8Array(key).buffer : key;\n            messageBuffer = this.toUint8Array(message).buffer;\n            return [4 /*yield*/, isomorphic_webcrypto_1.default.subtle.importKey('raw', keyBuffer, {\n              name: 'HMAC',\n              hash: {\n                name: 'SHA-256'\n              }\n            }, false, ['sign'])];\n          case 1:\n            cryptoKey = _a.sent();\n            return [4 /*yield*/, isomorphic_webcrypto_1.default.subtle.sign({\n              name: 'HMAC',\n              hash: {\n                name: 'SHA-256'\n              }\n            }, cryptoKey, messageBuffer)];\n          case 2:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  /**\r\n   * Note that this implementation does not work with two-byte characters.\r\n   * However, no inputs into a signed signaling service request should have two-byte characters.\r\n   */\n  SigV4RequestSigner.toUint8Array = function (input) {\n    var buf = new ArrayBuffer(input.length);\n    var bufView = new Uint8Array(buf);\n    for (var i = 0, strLen = input.length; i < strLen; i++) {\n      bufView[i] = input.charCodeAt(i);\n    }\n    return bufView;\n  };\n  SigV4RequestSigner.toHex = function (buffer) {\n    return Array.from(new Uint8Array(buffer)).map(function (b) {\n      return b.toString(16).padStart(2, '0');\n    }).join('');\n  };\n  SigV4RequestSigner.DEFAULT_ALGORITHM = 'AWS4-HMAC-SHA256';\n  SigV4RequestSigner.DEFAULT_SERVICE = 'kinesisvideo';\n  return SigV4RequestSigner;\n}();\nexports.SigV4RequestSigner = SigV4RequestSigner;","map":{"version":3,"names":["isomorphic_webcrypto_1","tslib_1","__importDefault","require","utils_1","SigV4RequestSigner","region","credentials","service","DEFAULT_SERVICE","prototype","getSignedURL","endpoint","queryParams","date","Date","getPromise","_c","sent","validateValueNonNil","accessKeyId","secretAccessKey","datetimeString","getDateTimeString","dateString","getDateString","protocol","urlProtocol","concat","startsWith","Error","includes","pathStartIndex","indexOf","length","host","substring","path","signedHeaders","join","method","credentialScope","canonicalQueryParams","Object","assign","DEFAULT_ALGORITHM","sessionToken","canonicalQueryString","createQueryString","canonicalHeaders","canonicalHeadersString","createHeadersString","sha256","payloadHash","canonicalRequest","canonicalRequestHash","stringToSign","getSignatureKey","signingKey","_b","_a","toHex","hmac","apply","signature","signedQueryParams","kDate","kRegion","kService","headers","keys","map","header","sort","key","encodeURIComponent","toISOString","replace","message","default","subtle","digest","name","toUint8Array","hashBuffer","keyBuffer","buffer","messageBuffer","importKey","hash","cryptoKey","sign","input","buf","ArrayBuffer","bufView","Uint8Array","i","strLen","charCodeAt","Array","from","b","toString","padStart","exports"],"sources":["../src/SigV4RequestSigner.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}