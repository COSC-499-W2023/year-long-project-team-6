{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROG\\\\Desktop\\\\COSC499\\\\year-long-project-team-6\\\\app\\\\frontend\\\\src\\\\pages\\\\Members.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\nimport { FaEllipsisV } from 'react-icons/fa';\nimport ReactModal from 'react-modal';\nimport '../component/CSS/MembersPage.css';\nimport testPicture from '../component/image/profileDefault.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nReactModal.setAppElement('#root');\nfunction MembersPage() {\n  _s();\n  const [userId, setUserId] = useState('');\n  const navigate = useNavigate();\n  const {\n    groupId\n  } = useParams();\n  const [members, setMembers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [roleFilter, setRoleFilter] = useState('All Roles');\n  const [admin, setAdmin] = useState([]);\n  const [adminid, setAdminid] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [selectedMember, setSelectedMember] = useState(null);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const toggleDropdown = () => setIsOpen(!isOpen);\n  useEffect(() => {\n    const sessionUser = sessionStorage.getItem('user');\n    if (!sessionUser) {\n      navigate('/login');\n    } else {\n      const user = JSON.parse(sessionUser);\n      setUserId(user.userid);\n      console.log(\"User Id: \" + user.userid);\n    }\n  }, []);\n  const navigateToGroupPostMember = memberId => () => {\n    navigate(`/groupPost/${groupId}/${memberId}`);\n  };\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleRoleChange = event => {\n    setRoleFilter(event.target.value);\n  };\n  const removeUserFromGroup = async memberId => {\n    try {\n      fetch(`http://localhost:5001/admin-group/${groupId}/user/${memberId}`, {\n        method: 'DELETE'\n      }).then(response => {\n        console.log('User removed:', response.data);\n        alert(\"Successfully removed user from group!\");\n        window.location.reload();\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    } catch (error) {\n      console.error('Error removing user from group:', error);\n    }\n  };\n  const deleteGroup = async groupId => {\n    try {\n      fetch(`http://localhost:5001/admin-group/${groupId}`, {\n        method: 'DELETE'\n      }).then(response => {\n        console.log('User updated:', response.data);\n        alert(\"Successfully deleted the group!\");\n        navigate(`/`);\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    } catch (error) {\n      console.error('Error deleting group:', error);\n    }\n  };\n  const navigateToPostPage = () => {\n    navigate('/PostPage', {\n      state: {\n        groupId\n      }\n    });\n  };\n  const navigateToAnnounce = () => {\n    navigate('/announcement', {\n      state: {\n        groupId\n      }\n    });\n  };\n  const navigateToView = () => {\n    navigate('/view-announce', {\n      state: {\n        groupId\n      }\n    });\n  };\n  useEffect(() => {\n    if (userId) {\n      fetch(`http://localhost:5001/groups-users/${groupId}`).then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return response.json();\n      }).then(data => {\n        console.log(userId);\n        console.log('Fetched data:', data);\n        const updatedMembers = data.map(member => {\n          if (member.user_image) {\n            member.user_image = `data:image/*;base64,${member.user_image}`;\n          } else {\n            member.user_image = testPicture;\n          }\n          return member;\n        });\n        setMembers(updatedMembers);\n      }).catch(error => {\n        console.error('Error fetching posts:', error);\n      });\n      fetch(`http://localhost:5001/group-admin/${groupId}`).then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return response.json();\n      }).then(data => {\n        console.log(userId);\n        console.log('groupadmin:', data);\n        console.log(data[0].username);\n        setAdmin(data[0].username);\n        setAdminid(data[0].admin);\n      }).catch(error => {\n        console.error('Error fetching posts:', error);\n      });\n    }\n  }, [userId]);\n  const renderEditForm = () => {\n    if (showModal) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-backdrop\",\n        onClick: () => setShowModal(false),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"close\",\n            onClick: () => setShowModal(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Manage for \", selectedMember === null || selectedMember === void 0 ? void 0 : selectedMember.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (selectedMember !== null && selectedMember !== void 0 && selectedMember.userid) {\n                navigate(`/groupPost/${groupId}/${selectedMember.userid}`);\n              }\n            },\n            children: \"View Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeUserFromGroup(selectedMember === null || selectedMember === void 0 ? void 0 : selectedMember.userid),\n            children: \"Delete User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"members-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"admin\",\n        children: [\"Admin: \", admin]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"members-filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search username\",\n          value: searchTerm,\n          onChange: handleSearchChange,\n          className: \"search-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: roleFilter,\n          onChange: handleRoleChange,\n          className: \"dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"All Roles\",\n            children: \"All Roles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"sender\",\n            children: \"Sender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Admin\",\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleDropdown,\n          children: \"Menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-content\",\n          children: [userId !== adminId && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigateToGroupPostMember(userId),\n            children: \"View Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this), userId === adminId && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteGroup(groupId),\n              children: \"Delete Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: navigateToAnnounce,\n              className: \"navigate-announce-button\",\n              children: \"Create Announcement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: navigateToPostPage,\n            className: \"navigate-post-page-button\",\n            children: \"Create Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: navigateToView,\n            className: \"navigate-view-announce-button\",\n            children: \"View Announcement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"members-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: members.filter(member => member.username.toLowerCase().includes(searchTerm.toLowerCase()) && (roleFilter === 'All Roles' || member.role === roleFilter)).map((member, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: member.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: member.userid == adminid ? 'Admin' : 'Sender'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [userId == adminid && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"editButton\",\n                onClick: () => {\n                  setSelectedMember(member);\n                  setShowModal(true);\n                },\n                children: \"Manage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 45\n              }, this), renderEditForm()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 37\n            }, this)]\n          }, member.userid + '-' + index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(MembersPage, \"8u3XFnHeDXuy/G09028qfgen8+I=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = MembersPage;\nexport default MembersPage;\nvar _c;\n$RefreshReg$(_c, \"MembersPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","Link","FaEllipsisV","ReactModal","testPicture","jsxDEV","_jsxDEV","Fragment","_Fragment","setAppElement","MembersPage","_s","userId","setUserId","navigate","groupId","members","setMembers","searchTerm","setSearchTerm","roleFilter","setRoleFilter","admin","setAdmin","adminid","setAdminid","showModal","setShowModal","selectedMember","setSelectedMember","isDropdownOpen","setIsDropdownOpen","toggleDropdown","setIsOpen","isOpen","sessionUser","sessionStorage","getItem","user","JSON","parse","userid","console","log","navigateToGroupPostMember","memberId","handleSearchChange","event","target","value","handleRoleChange","removeUserFromGroup","fetch","method","then","response","data","alert","window","location","reload","catch","error","deleteGroup","navigateToPostPage","state","navigateToAnnounce","navigateToView","ok","Error","status","json","updatedMembers","map","member","user_image","username","renderEditForm","className","onClick","children","e","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","id","type","placeholder","onChange","adminId","filter","toLowerCase","includes","role","index","_c","$RefreshReg$"],"sources":["C:/Users/ROG/Desktop/COSC499/year-long-project-team-6/app/frontend/src/pages/Members.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\r\nimport { FaEllipsisV } from 'react-icons/fa';\r\nimport ReactModal from 'react-modal';\r\n\r\nimport '../component/CSS/MembersPage.css';\r\nimport testPicture from '../component/image/profileDefault.jpg';\r\n\r\nReactModal.setAppElement('#root');\r\n\r\nfunction MembersPage() {\r\n    const [userId, setUserId] = useState('');\r\n    const navigate = useNavigate();\r\n    const { groupId } = useParams();\r\n    const [members, setMembers] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [roleFilter, setRoleFilter] = useState('All Roles');\r\n    const [admin, setAdmin] = useState([])\r\n    const [adminid, setAdminid] = useState([])\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [selectedMember, setSelectedMember] = useState(null);\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n\r\n    const toggleDropdown = () => setIsOpen(!isOpen);\r\n\r\n\r\n    useEffect(() => {\r\n        const sessionUser = sessionStorage.getItem('user');\r\n        if (!sessionUser) {\r\n            navigate('/login');\r\n        } else {\r\n            const user = JSON.parse(sessionUser);\r\n            setUserId(user.userid);\r\n            console.log(\"User Id: \" + user.userid);\r\n        }\r\n    }, []);\r\n    const navigateToGroupPostMember = (memberId) => () => {\r\n        navigate(`/groupPost/${groupId}/${memberId}`);\r\n    };\r\n\r\n    const handleSearchChange = (event) => {\r\n        setSearchTerm(event.target.value);\r\n    };\r\n\r\n    const handleRoleChange = (event) => {\r\n        setRoleFilter(event.target.value);\r\n    };\r\n\r\n    const removeUserFromGroup = async (memberId) => {\r\n        try {\r\n            fetch(`http://localhost:5001/admin-group/${groupId}/user/${memberId}`, {\r\n                method: 'DELETE'\r\n            }).then(\r\n                response => {\r\n                    console.log('User removed:', response.data);\r\n                    alert(\"Successfully removed user from group!\");\r\n                    window.location.reload();\r\n                }\r\n            )\r\n                .catch(\r\n                    error => {\r\n                        console.error('Error:', error);\r\n                    }\r\n                );\r\n        } catch (error) {\r\n            console.error('Error removing user from group:', error);\r\n        }\r\n    };\r\n\r\n    const deleteGroup = async (groupId) => {\r\n        try {\r\n            fetch(`http://localhost:5001/admin-group/${groupId}`, {\r\n                method: 'DELETE'\r\n            }).then(\r\n                response => {\r\n                    console.log('User updated:', response.data);\r\n                    alert(\"Successfully deleted the group!\");\r\n                    navigate(`/`);\r\n                }\r\n            )\r\n                .catch(\r\n                    error => {\r\n                        console.error('Error:', error);\r\n                    }\r\n                );\r\n        } catch (error) {\r\n            console.error('Error deleting group:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const navigateToPostPage = () => {\r\n        navigate('/PostPage', { state: { groupId } });\r\n    };\r\n\r\n\r\n    const navigateToAnnounce = () => {\r\n        navigate('/announcement', { state: { groupId } });\r\n    }\r\n    const navigateToView = () => {\r\n        navigate('/view-announce', { state: { groupId } });\r\n    };\r\n    useEffect(() => {\r\n        if (userId) {\r\n            fetch(`http://localhost:5001/groups-users/${groupId}`)\r\n                .then(response => {\r\n                    if (!response.ok) {\r\n                        throw new Error(`HTTP error! status: ${response.status}`);\r\n                    }\r\n                    return response.json();\r\n                })\r\n                .then(data => {\r\n                    console.log(userId);\r\n                    console.log('Fetched data:', data);\r\n                    const updatedMembers = data.map(member => {\r\n                        if (member.user_image) {\r\n                            member.user_image = `data:image/*;base64,${member.user_image}`;\r\n                        } else {\r\n                            member.user_image = testPicture;\r\n                        }\r\n                        return member;\r\n                    });\r\n                    setMembers(updatedMembers);\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error fetching posts:', error);\r\n                });\r\n            fetch(`http://localhost:5001/group-admin/${groupId}`)\r\n                .then(response => {\r\n                    if (!response.ok) {\r\n                        throw new Error(`HTTP error! status: ${response.status}`);\r\n                    }\r\n                    return response.json();\r\n                })\r\n                .then(data => {\r\n                    console.log(userId);\r\n                    console.log('groupadmin:', data);\r\n                    console.log(data[0].username)\r\n                    setAdmin(data[0].username);\r\n                    setAdminid(data[0].admin);\r\n\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error fetching posts:', error);\r\n                });\r\n        }\r\n\r\n    }, [userId]);\r\n    \r\n\r\n    const renderEditForm = () => {\r\n        if (showModal) {\r\n            return (\r\n                <div className=\"modal-backdrop\" onClick={() => setShowModal(false)}>\r\n                    <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\r\n                        <span className=\"close\" onClick={() => setShowModal(false)}>&times;</span>\r\n                        <h2>Manage for {selectedMember?.username}</h2>\r\n                        <button onClick={() => {\r\n                        if (selectedMember?.userid) {\r\n                            navigate(`/groupPost/${groupId}/${selectedMember.userid}`);\r\n                        }\r\n                        }}>View Posts</button>\r\n                        <button onClick={() => removeUserFromGroup(selectedMember?.userid)}>Delete User</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return null;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"members-page\">\r\n                <h3 id=\"admin\">Admin: {admin}</h3>\r\n                <div className=\"members-filter\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search username\"\r\n                        value={searchTerm}\r\n                        onChange={handleSearchChange}\r\n                        className=\"search-bar\"\r\n                    />\r\n\r\n                    <select value={roleFilter} onChange={handleRoleChange} className=\"dropdown\">\r\n                        <option value=\"All Roles\">All Roles</option>\r\n                        <option value=\"sender\">Sender</option>\r\n                        <option value=\"Admin\">Admin</option>\r\n                    </select>\r\n                    <button onClick={toggleDropdown}>Menu</button>\r\n                    {isOpen && (\r\n                        <div className=\"dropdown-content\">\r\n                        {userId !== adminId && (\r\n                            <button onClick={() => navigateToGroupPostMember(userId)}>View Posts</button>\r\n                        )}\r\n                        {userId === adminId && (\r\n                            <>\r\n                            <button onClick={() => deleteGroup(groupId)}>Delete Group</button>\r\n                            <button onClick={navigateToAnnounce} className=\"navigate-announce-button\">Create Announcement</button>\r\n                            </>\r\n                        )}\r\n                        <button onClick={navigateToPostPage} className=\"navigate-post-page-button\">Create Post</button>\r\n                        <button onClick={navigateToView} className=\"navigate-view-announce-button\">View Announcement</button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <table className=\"members-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Role</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    {/* <tbody>\r\n                        {members\r\n                            .filter(member =>\r\n                                member.username.toLowerCase().includes(searchTerm.toLowerCase()) &&\r\n                                (roleFilter === 'All Roles' || member.role === roleFilter)\r\n                            )\r\n                            .map((member, index) => (\r\n                                <tr key={member.userid + '-' + index}>\r\n                                    <td>{member.username}</td>\r\n                                    <td>{member.userid == adminid ? 'Admin' : 'Sender'}</td>\r\n                                    <td>\r\n                                        {userId == adminid ? (\r\n                                            <div className='adminButton'>\r\n                                                <button onClick={navigateToGroupPostMember(member.userid)}>View Posts</button>\r\n                                                <button onClick={() => removeUserFromGroup(member.userid)}>Delete User</button>\r\n                                            </div>\r\n                                        ) : null}\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            ))}\r\n                    </tbody> */}\r\n                    <tbody>\r\n                        {members\r\n                            .filter(member =>\r\n                                member.username.toLowerCase().includes(searchTerm.toLowerCase()) &&\r\n                                (roleFilter === 'All Roles' || member.role === roleFilter)\r\n                            )\r\n                            .map((member, index) => (\r\n                                <tr key={member.userid + '-' + index}>\r\n                                    <td>{member.username}</td>\r\n                                    <td>{member.userid == adminid ? 'Admin' : 'Sender'}</td>\r\n                                    <td>\r\n                                        {userId == adminid && (\r\n                                            <button className='editButton' onClick={() => {\r\n                                            setSelectedMember(member);\r\n                                            setShowModal(true);\r\n                                        }}>Manage</button>                                        \r\n                                        )}\r\n                                        {renderEditForm()}\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default MembersPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}