{"ast":null,"code":"var _jsxFileName = \"/Users/xuximin/Desktop/499/year-long-project-team-6/app/frontend/src/pages/MainContent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport GroupCard from './GroupCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainContent() {\n  _s();\n  const [userId, setUserId] = useState('');\n  const [groups, setGroups] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [code, setCode] = useState('');\n  const [searchValue, setSearchValue] = useState('');\n  const [result, setResult] = useState('');\n  const [showPopup, setShowPopup] = useState(false);\n  const [isModalOpen, setModalOpen] = useState(false);\n  const modalRef = useRef(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const sessionUser = sessionStorage.getItem('user');\n    if (!sessionUser) {\n      navigate('/login');\n    } else {\n      const user = JSON.parse(sessionUser);\n      setUserId(user.userid);\n      console.log(\"User Id: \" + user.userid);\n    }\n  }, []);\n  useEffect(() => {\n    if (userId) {\n      fetch(`http://localhost:5001/groups/${userId}`).then(response => {\n        console.log(response);\n        if (!response.ok) {\n          console.error('Response Status:', response.status);\n          console.error('Response Status Text:', response.statusText);\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return response.json();\n      }).then(data => {\n        setGroups(data);\n      }).catch(error => {\n        console.error('Error fetching groups:', error);\n      });\n    }\n  }, [userId]);\n  const generateRandomCode = () => {\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';\n    let result = '';\n    for (let i = 0; i < 5; i++) {\n      result += characters.charAt(Math.floor(Math.random() * characters.length));\n    }\n    return result;\n  };\n  const handleCreateGroup = async () => {\n    const newCode = generateRandomCode();\n    setCode(newCode);\n    setShowPopup(true);\n    const groupName = document.querySelector('[name=\"groupname\"]').value;\n    console.log(groupName);\n    if (groupName) {\n      try {\n        const response = fetch('http://localhost:5001/add-group', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            groupName: groupName,\n            code: newCode\n          })\n        });\n        if (!response) {\n          console.log('no');\n        } else {\n          console.log(response);\n        }\n        if (response) {\n          console.log('Group created successfully');\n        } else {\n          console.error('Failed to create group');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    } else {\n      console.error('Group name is required');\n    }\n  };\n  const searchGroup = () => {\n    const message = searchValue.length === 5 ? `Searching for group with code: ${searchValue}` : 'Please enter a 5-character code.';\n    setResult(message);\n  };\n  const toggleModal = () => {\n    setModalOpen(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"first-row\",\n        children: [groups.length > 0 ? groups.map(group => /*#__PURE__*/_jsxDEV(GroupCard, {\n          imgUrl: group.imgUrl,\n          time: group.group_creation_time,\n          groupName: group.groupname,\n          admin: group.admin_username,\n          invite_code: group.invite_code,\n          numberOfPeople: group.member_count\n        }, group.groupid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"newUser\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"You are not in any group yet. Join or create a new group to get started!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            id: \"myBtn\",\n            className: \"addgroup\",\n            href: \"#\",\n            onClick: e => {\n              e.preventDefault();\n              e.stopPropagation();\n              toggleModal();\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Click Here to Create or Join!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal\",\n          ref: modalRef,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"close\",\n              onClick: toggleModal,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"creategroup\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Create your group here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Your Group Name\",\n                name: \"groupname\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleCreateGroup,\n                children: \"Create!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Group Code: \", code]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"addgroup\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Find your group here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                maxLength: \"5\",\n                placeholder: \"Enter a 5-character code\",\n                value: searchValue,\n                onChange: e => setSearchValue(e.target.value.toUpperCase())\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: searchGroup,\n                children: \"Join!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: result\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(MainContent, \"IZAuZzZENSWND6p544m/6Z70MUY=\", false, function () {\n  return [useNavigate];\n});\n_c = MainContent;\nexport default MainContent;\nvar _c;\n$RefreshReg$(_c, \"MainContent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","GroupCard","jsxDEV","_jsxDEV","MainContent","_s","userId","setUserId","groups","setGroups","showModal","setShowModal","code","setCode","searchValue","setSearchValue","result","setResult","showPopup","setShowPopup","isModalOpen","setModalOpen","modalRef","navigate","sessionUser","sessionStorage","getItem","user","JSON","parse","userid","console","log","fetch","then","response","ok","error","status","statusText","Error","json","data","catch","generateRandomCode","characters","i","charAt","Math","floor","random","length","handleCreateGroup","newCode","groupName","document","querySelector","value","method","headers","body","stringify","searchGroup","message","toggleModal","prev","className","children","map","group","imgUrl","time","group_creation_time","groupname","admin","admin_username","invite_code","numberOfPeople","member_count","groupid","fileName","_jsxFileName","lineNumber","columnNumber","id","href","onClick","e","preventDefault","stopPropagation","ref","type","placeholder","name","maxLength","onChange","target","toUpperCase","_c","$RefreshReg$"],"sources":["/Users/xuximin/Desktop/499/year-long-project-team-6/app/frontend/src/pages/MainContent.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport GroupCard from './GroupCard';\n\nfunction MainContent() {\n  const [userId, setUserId] = useState('');\n  const [groups, setGroups] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [code, setCode] = useState('');\n  const [searchValue, setSearchValue] = useState('');\n  const [result, setResult] = useState('');\n  const [showPopup, setShowPopup] = useState(false);\n  const [isModalOpen, setModalOpen] = useState(false);\n  const modalRef = useRef(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const sessionUser = sessionStorage.getItem('user');\n    if (!sessionUser) {\n      navigate('/login');\n    } else {\n      const user = JSON.parse(sessionUser);\n      setUserId(user.userid);\n      console.log(\"User Id: \" + user.userid);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (userId) {\n      fetch(`http://localhost:5001/groups/${userId}`,)\n        .then(response => {\n          console.log(response);\n          if (!response.ok) {\n            console.error('Response Status:', response.status);\n            console.error('Response Status Text:', response.statusText);\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          return response.json();\n        })\n        .then(data => {\n          setGroups(data);\n        })\n        .catch(error => {\n          console.error('Error fetching groups:', error);\n        });\n    }\n  }, [userId]);\n\n\n  const generateRandomCode = () => {\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';\n    let result = '';\n    for (let i = 0; i < 5; i++) {\n      result += characters.charAt(Math.floor(Math.random() * characters.length));\n    }\n    return result;\n  };\n  const handleCreateGroup = async () => {\n    const newCode = generateRandomCode();\n    setCode(newCode);\n    setShowPopup(true);\n    const groupName = document.querySelector('[name=\"groupname\"]').value;\n    console.log(groupName);\n    if (groupName) {\n      try {\n        const response = fetch('http://localhost:5001/add-group', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ groupName: groupName, code: newCode }),\n        });\n        if (!response) {\n          console.log('no');\n        } else {\n          console.log(response);\n        }\n        if (response) {\n          console.log('Group created successfully');\n        } else {\n          console.error('Failed to create group');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    } else {\n      console.error('Group name is required');\n    }\n  };\n\n  const searchGroup = () => {\n    const message = searchValue.length === 5\n      ? `Searching for group with code: ${searchValue}`\n      : 'Please enter a 5-character code.';\n    setResult(message);\n  };\n\n  const toggleModal = () => {\n    setModalOpen(prev => !prev);\n  };\n\n  return (\n    <div className=\"content\">\n      <div className=\"main-content\">\n        <div className=\"first-row\">\n          {groups.length > 0 ? (\n            groups.map(group => (\n              <GroupCard\n                key={group.groupid}\n                imgUrl={group.imgUrl}\n                time={group.group_creation_time}\n                groupName={group.groupname}\n                admin={group.admin_username}\n                invite_code={group.invite_code}\n                numberOfPeople={group.member_count}\n              />\n            ))\n          ) : (\n            <div className='newUser'>\n              <h2>You are not in any group yet. Join or create a new group to get started!</h2>\n              <a id=\"myBtn\" className=\"addgroup\" href=\"#\" onClick={(e) => { e.preventDefault(); e.stopPropagation(); toggleModal(); }}>\n                <button>Click Here to Create or Join!</button>\n              </a>\n            </div>\n          )}\n          {isModalOpen && (\n            <div className=\"modal\" ref={modalRef}>\n              <div className=\"modal-content\">\n                <span className=\"close\" onClick={toggleModal}>&times;</span>\n                <div className='creategroup'>\n                  <h3>Create your group here</h3>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Your Group Name\"\n                    name='groupname'\n                  />\n                  <button onClick={handleCreateGroup}>Create!</button>\n                  {showPopup && <div>Group Code: {code}</div>}\n                </div>\n                <div className=\"addgroup\">\n                  <h3>Find your group here</h3>\n                  <input\n                    type=\"text\"\n                    maxLength=\"5\"\n                    placeholder=\"Enter a 5-character code\"\n                    value={searchValue}\n                    onChange={(e) => setSearchValue(e.target.value.toUpperCase())}\n                  />\n                  <button onClick={searchGroup}>Join!</button>\n                  <p>{result}</p>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default MainContent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}