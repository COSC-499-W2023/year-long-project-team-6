{"ast":null,"code":"var _jsxFileName = \"/Users/xuximin/Desktop/499/year-long-project-team-6/app/frontend/src/pages/Members.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\nimport { FaEllipsisV } from 'react-icons/fa';\nimport ReactModal from 'react-modal';\nimport '../component/CSS/MembersPage.css';\nimport testPicture from '../component/image/profileDefault.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nReactModal.setAppElement('#root');\nfunction MembersPage() {\n  _s();\n  const [userId, setUserId] = useState('');\n  const navigate = useNavigate();\n  const {\n    groupId\n  } = useParams();\n  const [members, setMembers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [roleFilter, setRoleFilter] = useState('All Roles');\n  const [admin, setAdmin] = useState([]);\n  const [adminid, setAdminid] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [selectedMember, setSelectedMember] = useState(null);\n  const [userDetails, setUserDetails] = useState(null);\n  const [showModal2, setShowModal2] = useState(false);\n  const [code, setCode] = useState([]);\n  useEffect(() => {\n    const sessionUser = sessionStorage.getItem('user');\n    if (!sessionUser) {\n      navigate('/login');\n    } else {\n      const user = JSON.parse(sessionUser);\n      setUserId(user.userid);\n      console.log(\"User Id: \" + user.userid);\n    }\n  }, []);\n  const navigateToGroupPostMember = memberId => () => {\n    navigate(`/groupPost/${groupId}/${memberId}`);\n  };\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleRoleChange = event => {\n    setRoleFilter(event.target.value);\n  };\n  const removeUserFromGroup = async memberId => {\n    try {\n      fetch(`http://localhost:5001/admin-group/${groupId}/user/${memberId}`, {\n        method: 'DELETE'\n      }).then(response => {\n        console.log('User removed:', response.data);\n        alert(\"Successfully removed user from group!\");\n        window.location.reload();\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    } catch (error) {\n      console.error('Error removing user from group:', error);\n    }\n  };\n  const deleteGroup = async groupId => {\n    try {\n      fetch(`http://localhost:5001/admin-group/${groupId}`, {\n        method: 'DELETE'\n      }).then(response => {\n        console.log('User updated:', response.data);\n        alert(\"Successfully deleted the group!\");\n        navigate(`/`);\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    } catch (error) {\n      console.error('Error deleting group:', error);\n    }\n  };\n  const navigateToPostPage = () => {\n    navigate('/PostPage', {\n      state: {\n        groupId\n      }\n    });\n  };\n  const navigateToAnnounce = () => {\n    navigate('/announcement', {\n      state: {\n        groupId\n      }\n    });\n  };\n  const navigateToView = () => {\n    navigate('/view-announce', {\n      state: {\n        groupId\n      }\n    });\n  };\n  useEffect(() => {\n    if (userId) {\n      fetch(`http://localhost:5001/groups-users/${groupId}`).then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return response.json();\n      }).then(data => {\n        console.log(userId);\n        console.log('Fetched data:', data);\n        const updatedMembers = data.map(member => {\n          if (member.user_image) {\n            member.user_image = `data:image/*;base64,${member.user_image}`;\n          } else {\n            member.user_image = testPicture;\n          }\n          return member;\n        });\n        setMembers(updatedMembers);\n      }).catch(error => {\n        console.error('Error fetching posts:', error);\n      });\n      fetch(`http://localhost:5001/group-admin/${groupId}`).then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return response.json();\n      }).then(data => {\n        console.log(userId);\n        console.log('groupadmin:', data);\n        console.log(data[0].username);\n        setAdmin(data[0].username);\n        setAdminid(data[0].admin);\n        setCode(data[0].invite_code);\n      }).catch(error => {\n        console.error('Error fetching posts:', error);\n      });\n    }\n  }, [userId]);\n  const renderEditForm = () => {\n    if (showModal) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-backdrop\",\n        onClick: () => setShowModal(false),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"close\",\n            onClick: () => setShowModal(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Manage for \", selectedMember === null || selectedMember === void 0 ? void 0 : selectedMember.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (selectedMember !== null && selectedMember !== void 0 && selectedMember.userid) {\n                navigate(`/groupPost/${groupId}/${selectedMember.userid}`);\n              }\n            },\n            children: \"View Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeUserFromGroup(selectedMember === null || selectedMember === void 0 ? void 0 : selectedMember.userid),\n            children: \"Delete User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this);\n    }\n    return null;\n  };\n  const handleUserClick = async userId => {\n    const response = await fetch(`http://localhost:5001/user-details/${userId}`);\n    const data = await response.json();\n    if (data.user_image) {\n      data.user_image = `data:image/*;base64,${data.user_image}`;\n    }\n    setUserDetails(data); // Assuming this data includes username, gender, birthday, and user_image\n    setShowModal2(true); // Assuming you have a state to control the modal visibility\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ReactModal, {\n      className: \"userDetail\",\n      isOpen: showModal2,\n      onRequestClose: () => setShowModal2(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: () => setShowModal2(false),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), userDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: userDetails.user_image,\n          style: {\n            width: '100px',\n            height: '100px',\n            borderRadius: '50%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Username: \", userDetails.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Gender: \", userDetails.gender]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Birthday: \", userDetails.birthday]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"members-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"admin\",\n        children: [\"Admin: \", admin]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: userId == adminid ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Invite Code: \", code]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 43\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"members-filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search username\",\n          value: searchTerm,\n          onChange: handleSearchChange,\n          className: \"search-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: roleFilter,\n          onChange: handleRoleChange,\n          className: \"dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"All Roles\",\n            children: \"All Roles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"sender\",\n            children: \"Sender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Admin\",\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"button\",\n          children: userId != adminid ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: navigateToGroupPostMember(userId),\n            children: \"View Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteGroup(groupId),\n            children: \"Delete Group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: navigateToPostPage,\n          className: \"navigate-post-page-button\",\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), userId == adminid ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: navigateToAnnounce,\n          className: \"navigate-announce-button\",\n          children: \"Create Announcement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 43\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: navigateToView,\n          className: \"navigate-view-announce-button\",\n          children: \"View Announcement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"members-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: members.filter(member => member.username.toLowerCase().includes(searchTerm.toLowerCase()) && (roleFilter === 'All Roles' || member.role === roleFilter)).map((member, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '10px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: member.user_image,\n                  style: {\n                    width: '30px',\n                    height: '30px',\n                    borderRadius: '50%'\n                  },\n                  onClick: () => handleUserClick(member.userid),\n                  alt: \"avatar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: member.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: member.userid == adminid ? 'Admin' : 'Sender'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [userId == adminid && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"editButton\",\n                onClick: () => {\n                  setSelectedMember(member);\n                  setShowModal(true);\n                },\n                children: \"Manage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 45\n              }, this), renderEditForm()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 37\n            }, this)]\n          }, member.userid + '-' + index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(MembersPage, \"9dW94F07/lZ5XCmvYnEIkZlKHog=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = MembersPage;\nexport default MembersPage;\nvar _c;\n$RefreshReg$(_c, \"MembersPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","Link","FaEllipsisV","ReactModal","testPicture","jsxDEV","_jsxDEV","Fragment","_Fragment","setAppElement","MembersPage","_s","userId","setUserId","navigate","groupId","members","setMembers","searchTerm","setSearchTerm","roleFilter","setRoleFilter","admin","setAdmin","adminid","setAdminid","showModal","setShowModal","selectedMember","setSelectedMember","userDetails","setUserDetails","showModal2","setShowModal2","code","setCode","sessionUser","sessionStorage","getItem","user","JSON","parse","userid","console","log","navigateToGroupPostMember","memberId","handleSearchChange","event","target","value","handleRoleChange","removeUserFromGroup","fetch","method","then","response","data","alert","window","location","reload","catch","error","deleteGroup","navigateToPostPage","state","navigateToAnnounce","navigateToView","ok","Error","status","json","updatedMembers","map","member","user_image","username","invite_code","renderEditForm","className","onClick","children","e","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","handleUserClick","isOpen","onRequestClose","src","style","width","height","borderRadius","gender","birthday","id","type","placeholder","onChange","filter","toLowerCase","includes","role","index","display","alignItems","gap","alt","_c","$RefreshReg$"],"sources":["/Users/xuximin/Desktop/499/year-long-project-team-6/app/frontend/src/pages/Members.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\nimport { FaEllipsisV } from 'react-icons/fa';\nimport ReactModal from 'react-modal';\n\nimport '../component/CSS/MembersPage.css';\nimport testPicture from '../component/image/profileDefault.jpg';\n\nReactModal.setAppElement('#root');\n\nfunction MembersPage() {\n    const [userId, setUserId] = useState('');\n    const navigate = useNavigate();\n    const { groupId } = useParams();\n    const [members, setMembers] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [roleFilter, setRoleFilter] = useState('All Roles');\n    const [admin, setAdmin] = useState([]);\n    const [adminid, setAdminid] = useState([]);\n    const [showModal, setShowModal] = useState(false);\n    const [selectedMember, setSelectedMember] = useState(null);\n    const [userDetails, setUserDetails] = useState(null);\n    const [showModal2, setShowModal2] = useState(false);\n    const [code, setCode] = useState([]);\n\n    useEffect(() => {\n        const sessionUser = sessionStorage.getItem('user');\n        if (!sessionUser) {\n            navigate('/login');\n        } else {\n            const user = JSON.parse(sessionUser);\n            setUserId(user.userid);\n            console.log(\"User Id: \" + user.userid);\n        }\n    }, []);\n    const navigateToGroupPostMember = (memberId) => () => {\n        navigate(`/groupPost/${groupId}/${memberId}`);\n    };\n\n    const handleSearchChange = (event) => {\n        setSearchTerm(event.target.value);\n    };\n\n    const handleRoleChange = (event) => {\n        setRoleFilter(event.target.value);\n    };\n\n    const removeUserFromGroup = async (memberId) => {\n        try {\n            fetch(`http://localhost:5001/admin-group/${groupId}/user/${memberId}`, {\n                method: 'DELETE'\n            }).then(\n                response => {\n                    console.log('User removed:', response.data);\n                    alert(\"Successfully removed user from group!\");\n                    window.location.reload();\n                }\n            )\n                .catch(\n                    error => {\n                        console.error('Error:', error);\n                    }\n                );\n        } catch (error) {\n            console.error('Error removing user from group:', error);\n        }\n    };\n\n    const deleteGroup = async (groupId) => {\n        try {\n            fetch(`http://localhost:5001/admin-group/${groupId}`, {\n                method: 'DELETE'\n            }).then(\n                response => {\n                    console.log('User updated:', response.data);\n                    alert(\"Successfully deleted the group!\");\n                    navigate(`/`);\n                }\n            )\n                .catch(\n                    error => {\n                        console.error('Error:', error);\n                    }\n                );\n        } catch (error) {\n            console.error('Error deleting group:', error);\n        }\n    };\n\n\n    const navigateToPostPage = () => {\n        navigate('/PostPage', { state: { groupId } });\n    };\n\n\n    const navigateToAnnounce = () => {\n        navigate('/announcement', { state: { groupId } });\n    }\n    const navigateToView = () => {\n        navigate('/view-announce', { state: { groupId } });\n    };\n\n    useEffect(() => {\n        if (userId) {\n            fetch(`http://localhost:5001/groups-users/${groupId}`)\n                .then(response => {\n                    if (!response.ok) {\n                        throw new Error(`HTTP error! status: ${response.status}`);\n                    }\n                    return response.json();\n                })\n                .then(data => {\n                    console.log(userId);\n                    console.log('Fetched data:', data);\n                    const updatedMembers = data.map(member => {\n                        if (member.user_image) {\n                            member.user_image = `data:image/*;base64,${member.user_image}`;\n                        } else {\n                            member.user_image = testPicture;\n                        }\n                        return member;\n                    });\n                    setMembers(updatedMembers);\n                })\n                .catch(error => {\n                    console.error('Error fetching posts:', error);\n                });\n            fetch(`http://localhost:5001/group-admin/${groupId}`)\n                .then(response => {\n                    if (!response.ok) {\n                        throw new Error(`HTTP error! status: ${response.status}`);\n                    }\n                    return response.json();\n                })\n                .then(data => {\n                    console.log(userId);\n                    console.log('groupadmin:', data);\n                    console.log(data[0].username);\n                    setAdmin(data[0].username);\n                    setAdminid(data[0].admin);\n                    setCode(data[0].invite_code);\n                })\n                .catch(error => {\n                    console.error('Error fetching posts:', error);\n                });\n        }\n\n    }, [userId]);\n\n\n    const renderEditForm = () => {\n        if (showModal) {\n            return (\n                <div className=\"modal-backdrop\" onClick={() => setShowModal(false)}>\n                    <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n                        <span className=\"close\" onClick={() => setShowModal(false)}>&times;</span>\n                        <h2>Manage for {selectedMember?.username}</h2>\n                        <button onClick={() => {\n                            if (selectedMember?.userid) {\n                                navigate(`/groupPost/${groupId}/${selectedMember.userid}`);\n                            }\n                        }}>View Posts</button>\n                        <button onClick={() => removeUserFromGroup(selectedMember?.userid)}>Delete User</button>\n                    </div>\n                </div>\n            );\n        }\n        return null;\n    };\n\n    const handleUserClick = async (userId) => {\n        const response = await fetch(`http://localhost:5001/user-details/${userId}`);\n        const data = await response.json();\n        if (data.user_image) {\n            data.user_image = `data:image/*;base64,${data.user_image}`;\n        }\n        setUserDetails(data); // Assuming this data includes username, gender, birthday, and user_image\n        setShowModal2(true); // Assuming you have a state to control the modal visibility\n    };\n\n    return (\n        <>\n            <ReactModal className=\"userDetail\" isOpen={showModal2} onRequestClose={() => setShowModal2(false)}>\n                <h2>User Details</h2>\n                <span className=\"close\" onClick={() => setShowModal2(false)}>&times;</span>\n                {userDetails && (\n                    <div>\n                        <img src={userDetails.user_image} style={{ width: '100px', height: '100px', borderRadius: '50%' }} />\n                        <p>Username: {userDetails.username}</p>\n                        <p>Gender: {userDetails.gender}</p>\n                        <p>Birthday: {userDetails.birthday}</p>\n                    </div>\n                )}\n            </ReactModal>\n\n            <div className=\"members-page\">\n                <h3 id=\"admin\">Admin: {admin}</h3>\n                <h4>{userId == adminid ? (<span>Invite Code: {code}</span>) :\n                    (<span></span>)}</h4>\n                <div className=\"members-filter\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Search username\"\n                        value={searchTerm}\n                        onChange={handleSearchChange}\n                        className=\"search-bar\"\n                    />\n\n                    <select value={roleFilter} onChange={handleRoleChange} className=\"dropdown\">\n                        <option value=\"All Roles\">All Roles</option>\n                        <option value=\"sender\">Sender</option>\n                        <option value=\"Admin\">Admin</option>\n                    </select>\n                    <span className='button'>\n                        {userId != adminid ? (\n                            <button onClick={navigateToGroupPostMember(userId)}>View Posts</button>\n                        ) :\n                            <button onClick={() => deleteGroup(groupId)}>Delete Group</button>\n                        }\n\n                    </span>\n                    <button onClick={navigateToPostPage} className=\"navigate-post-page-button\">Create Post</button>\n                    {userId == adminid ? (<button onClick={navigateToAnnounce} className=\"navigate-announce-button\">Create Announcement</button>\n                    ) : null}\n                    <button onClick={navigateToView} className=\"navigate-view-announce-button\">View Announcement</button>\n\n                </div>\n                <table className=\"members-table\">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Role</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        {members\n                            .filter(member =>\n                                member.username.toLowerCase().includes(searchTerm.toLowerCase()) &&\n                                (roleFilter === 'All Roles' || member.role === roleFilter)\n                            )\n                            .map((member, index) => (\n                                <tr key={member.userid + '-' + index}>\n                                    <td>\n                                        <div style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>\n                                            <img src={member.user_image} style={{ width: '30px', height: '30px', borderRadius: '50%' }} onClick={() => handleUserClick(member.userid)} alt=\"avatar\" />\n                                            <span>{member.username}</span>\n                                        </div>\n                                    </td>\n                                    <td>{member.userid == adminid ? 'Admin' : 'Sender'}</td>\n                                    <td>\n                                        {userId == adminid && (\n                                            <button className='editButton' onClick={() => {\n                                                setSelectedMember(member);\n                                                setShowModal(true);\n                                            }}>Manage</button>\n                                        )}\n                                        {renderEditForm()}\n                                    </td>\n                                </tr>\n                            ))}\n                    </tbody>\n                </table>\n            </div>\n        </>\n    );\n\n}\n\nexport default MembersPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}