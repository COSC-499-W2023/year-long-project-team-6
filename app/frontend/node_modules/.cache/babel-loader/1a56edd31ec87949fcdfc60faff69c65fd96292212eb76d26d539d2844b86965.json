{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\17321\\\\OneDrive\\\\\\u684C\\u9762\\\\year-long-project-team-6\\\\app\\\\frontend\\\\src\\\\pages\\\\announcement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Announcement() {\n  _s();\n  var _location$state;\n  const [userId, setUserId] = useState('');\n  const location = useLocation();\n  const groupId = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.groupId;\n  const [title, setTitle] = useState('');\n  const [detail, setDetail] = useState('');\n  const [posts, setPosts] = useState([]);\n  const [selectedPost, setSelectedPost] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const sessionUser = sessionStorage.getItem('user');\n    if (!sessionUser) {\n      navigate('/login');\n    } else {\n      const user = JSON.parse(sessionUser);\n      setUserId(user.userid);\n      console.log(\"User Id: \" + user.userid);\n    }\n  }, []);\n  useEffect(() => {\n    console.log(groupId, userId);\n    if (groupId && userId) {\n      fetch(`http://localhost:5001/posts/${userId}/${groupId}`).then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        if (response.headers.get(\"content-type\").includes(\"application/json\")) {\n          return response.json();\n        }\n        throw new Error('Response not in JSON format');\n      }).then(data => {\n        setPosts(data);\n        console.log(data);\n      }).catch(error => console.error('Error fetching posts:', error));\n    }\n  }, [groupId, userId]);\n  const handleSubmit = event => {\n    event.preventDefault();\n    setIsSubmitting(true);\n    if (!title.trim()) {\n      window.alert('Please enter a title for the announcement.');\n      return;\n    }\n    if (!detail.trim()) {\n      window.alert('Please enter details for the announcement.');\n      return;\n    }\n    console.log({\n      title,\n      detail,\n      selectedPost\n    });\n  };\n  useEffect(() => {\n    if (isSubmitting) {\n      let announcementData = {\n        announcer: userId,\n        groupId,\n        title,\n        detail\n      };\n      if (selectedPost) {\n        announcementData.attachedPost = selectedPost;\n      }\n      fetch('http://localhost:5001/insertAnnouncement', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(announcementData)\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      }).then(data => {\n        console.log('Success:', data);\n        setIsSubmitting(false);\n        navigate(`/Members/${groupId}`);\n      }).catch(error => {\n        console.error('Error:', error);\n        setIsSubmitting(false);\n      });\n    }\n  }, [isSubmitting, userId, groupId, title, detail, selectedPost, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Announcement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"title\",\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"detail\",\n          children: \"Detail:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"detail\",\n          value: detail,\n          onChange: e => setDetail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"attachedPost\",\n          children: \"Attach Post:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"attachedPost\",\n          value: selectedPost,\n          onChange: e => setSelectedPost(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: post.post_id,\n            children: post.post_title\n          }, post.post_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Announcement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n_s(Announcement, \"LMqNUfVAsOba4B11YLL021M3BoY=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Announcement;\nexport default Announcement;\nvar _c;\n$RefreshReg$(_c, \"Announcement\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","jsxDEV","_jsxDEV","Announcement","_s","_location$state","userId","setUserId","location","groupId","state","title","setTitle","detail","setDetail","posts","setPosts","selectedPost","setSelectedPost","isSubmitting","setIsSubmitting","navigate","sessionUser","sessionStorage","getItem","user","JSON","parse","userid","console","log","fetch","then","response","ok","Error","headers","get","includes","json","data","catch","error","handleSubmit","event","preventDefault","trim","window","alert","announcementData","announcer","attachedPost","method","body","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","value","onChange","e","target","required","map","post","post_id","post_title","_c","$RefreshReg$"],"sources":["C:/Users/17321/OneDrive/桌面/year-long-project-team-6/app/frontend/src/pages/announcement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate,useLocation } from 'react-router-dom';\r\n\r\nfunction Announcement() {\r\n    const [userId, setUserId] = useState('');\r\n    const location = useLocation();\r\n    const groupId = location.state?.groupId; \r\n    const [title, setTitle] = useState('');\r\n    const [detail, setDetail] = useState('');\r\n    const [posts, setPosts] = useState([]);\r\n    const [selectedPost, setSelectedPost] = useState('');\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        const sessionUser = sessionStorage.getItem('user');\r\n        if (!sessionUser) {\r\n            navigate('/login');\r\n        } else {\r\n            const user = JSON.parse(sessionUser);\r\n            setUserId(user.userid);\r\n            console.log(\"User Id: \" + user.userid);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(groupId,userId)\r\n        if (groupId && userId) {\r\n            fetch(`http://localhost:5001/posts/${userId}/${groupId}`)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                if (response.headers.get(\"content-type\").includes(\"application/json\")) {\r\n                    return response.json();\r\n                }\r\n                throw new Error('Response not in JSON format');\r\n            })\r\n            .then(data => {\r\n                setPosts(data);\r\n                console.log(data);\r\n            })\r\n            .catch(error => console.error('Error fetching posts:', error));\r\n        \r\n        }\r\n    }, [groupId, userId]);\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setIsSubmitting(true); \r\n        if (!title.trim()) {\r\n            window.alert('Please enter a title for the announcement.');\r\n            return; \r\n        }\r\n    \r\n        if (!detail.trim()) {\r\n            window.alert('Please enter details for the announcement.');\r\n            return; \r\n        }\r\n        console.log({ title, detail, selectedPost });\r\n    };\r\n    useEffect(() => {\r\n        if (isSubmitting) {\r\n            let announcementData = {\r\n                announcer: userId,\r\n                groupId,\r\n                title,\r\n                detail\r\n            };\r\n    \r\n            if (selectedPost) {\r\n                announcementData.attachedPost = selectedPost;\r\n            }\r\n    \r\n            fetch('http://localhost:5001/insertAnnouncement', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(announcementData),\r\n            })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                console.log('Success:', data);\r\n                setIsSubmitting(false); \r\n                navigate(`/Members/${groupId}`);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                setIsSubmitting(false); \r\n            });\r\n        }\r\n    }, [isSubmitting, userId, groupId, title, detail, selectedPost, navigate]);\r\n    \r\n\r\n    return (\r\n        <div className='content'>\r\n            <h2>Create Announcement</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label htmlFor=\"title\">Title:</label>\r\n                    <input\r\n                        id=\"title\"\r\n                        type=\"text\"\r\n                        value={title}\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"detail\">Detail:</label>\r\n                    <textarea\r\n                        id=\"detail\"\r\n                        value={detail}\r\n                        onChange={(e) => setDetail(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"attachedPost\">Attach Post:</label>\r\n                    <select\r\n                        id=\"attachedPost\"\r\n                        value={selectedPost}\r\n                        onChange={(e) => setSelectedPost(e.target.value)}\r\n                    >\r\n                        <option value=\"\">Select a post</option>\r\n                        {posts.map(post => (\r\n                            <option key={post.post_id} value={post.post_id}>{post.post_title}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <button type=\"submit\">Submit Announcement</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Announcement;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}