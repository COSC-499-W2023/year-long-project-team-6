{"ast":null,"code":"var _jsxFileName = \"/Users/xuximin/Desktop/499/year-long-project-team-6/app/frontend/src/pages/Post.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"../component/CSS/post.css\";\nimport { initializeWebRTC, cleanupWebRTC } from './webrtc';\nimport { uploadVideo } from './webrtc';\nimport { wait } from \"@testing-library/user-event/dist/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PostPage() {\n  _s();\n  const [showWebRTC, setShowWebRTC] = useState(false);\n  const [userId, setUserId] = useState(2);\n  const [selectedGroup, setSelectedGroup] = useState(\"\");\n  const [postHistory, setPostHistory] = useState([]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const signalingClientRef = useRef(null);\n  const peerConnectionRef = useRef(null);\n  const localView = useRef(null);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [recordedChunks, setRecordedChunks] = useState([]);\n  const channelARN = 'arn:aws:kinesisvideo:us-east-1:466618866658:channel/webrtc-499/1701571372732';\n  useEffect(() => {\n    fetch(`http://localhost:5001/post-history/${userId}`).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      const arr = [];\n      for (let i in data) {\n        let o = {};\n        o[i] = data[i];\n        arr.push(o);\n      }\n      console.log(arr[0].data);\n      setPostHistory(arr[0].data);\n    }).catch(error => console.error('Error fetching post history:', error));\n\n    // Cleanup\n    return () => {\n      cleanupWebRTC(signalingClientRef.current, peerConnectionRef.current);\n    };\n  }, [userId]);\n  useEffect(() => {\n    console.log('recordedChunks updated:', recordedChunks);\n  }, [recordedChunks]);\n  const handleTogglePlay = async () => {\n    console.log('Click - isPlaying:', isPlaying, 'Refs:', localView.current);\n    if (!isPlaying) {\n      setTimeout(async () => {\n        if (localView.current) {\n          try {\n            const webrtc = await initializeWebRTC(channelARN, localView.current);\n            signalingClientRef.current = webrtc.signalingClient;\n            peerConnectionRef.current = webrtc.peerConnection;\n\n            // Initialize MediaRecorder here\n            const stream = localView.current.srcObject; // Assuming this is your local stream\n            console.log('stream', stream);\n            const options = {\n              mimeType: 'video/webm; codecs=vp9'\n            };\n            const recorder = new MediaRecorder(stream, options);\n            setMediaRecorder(recorder);\n            recorder.ondataavailable = event => {\n              if (event.data.size > 0) {\n                console.log('triggered event.data.size > 0');\n                console.log('datasize', event.data.size);\n                setRecordedChunks(prev => [...prev, event.data]);\n              }\n            };\n            setShowWebRTC(true);\n            recorder.start();\n          } catch (error) {\n            console.error('Error initializing WebRTC: ', error);\n          }\n        } else {\n          console.log('Refs are not set:', localView.current);\n        }\n      }, 100);\n    } else {\n      if (mediaRecorder) {\n        mediaRecorder.onstop = async () => {\n          // Create the blob only after recording has stopped\n          const blob = new Blob(recordedChunks, {\n            type: 'video/webm'\n          });\n          console.log('Recording stopped. Blob created:', blob);\n\n          // Upload the blob\n          try {\n            const uploadResult = await uploadVideo(blob);\n            console.log('Video uploaded successfully:', uploadResult);\n            // Handle the upload result as needed\n          } catch (uploadError) {\n            console.error('Failed to upload video:', uploadError);\n          }\n\n          // Clear the recorded chunks array\n          setRecordedChunks([]);\n        };\n        mediaRecorder.stop();\n      }\n      // Cleanup WebRTC connection\n      cleanupWebRTC(signalingClientRef.current, peerConnectionRef.current);\n      signalingClientRef.current = null;\n      peerConnectionRef.current = null;\n      setShowWebRTC(false);\n    }\n    setIsPlaying(!isPlaying);\n  };\n  function handleGroupChange(event) {\n    setSelectedGroup(event.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"send\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Send Your Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"input\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"image.php\",\n          method: \"post\",\n          encType: \"multipart/form-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"main\",\n            className: \"main\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"videoContainer\",\n              children: [isPlaying && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"video\", {\n                  ref: localView,\n                  style: {\n                    width: '640px'\n                  },\n                  autoPlay: true,\n                  playsInline: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 24\n                }, this)\n              }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: handleTogglePlay,\n                children: isPlaying ? 'Stop' : 'Start'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"EnterText\",\n              children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n                children: \"Name your new video\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"VName\",\n                placeholder: \"Video Name\",\n                name: \"VName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"EnterText\",\n              children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n                children: \"Choose a Group\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"GName\",\n                name: \"GName\",\n                value: selectedGroup,\n                onChange: handleGroupChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Sender\",\n                  children: \"Sender\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Doctor\",\n                  children: \"Doctor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Professor\",\n                  children: \"Professor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"EnterText\",\n              children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n                children: \"Description of Your Video\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"Description\",\n                placeholder: \"Describe your video\",\n                name: \"description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"button\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              value: \"Submit\",\n              name: \"submit\",\n              id: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"HistroyBar\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"histroyTable\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"History\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                id: \"Sort\",\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"order\",\n                  name: \"order\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Des\",\n                    children: \"Descending\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Asc\",\n                    children: \"Ascending\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: postHistory.map((post, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                id: \"img\",\n                children: `${post.post_title}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                id: \"date\",\n                children: new Date(post.post_date).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n}\n_s(PostPage, \"zsDKmRZ6y38GqDD+4P680Xdd22M=\");\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","initializeWebRTC","cleanupWebRTC","uploadVideo","wait","jsxDEV","_jsxDEV","Fragment","_Fragment","PostPage","_s","showWebRTC","setShowWebRTC","userId","setUserId","selectedGroup","setSelectedGroup","postHistory","setPostHistory","isPlaying","setIsPlaying","signalingClientRef","peerConnectionRef","localView","mediaRecorder","setMediaRecorder","recordedChunks","setRecordedChunks","channelARN","fetch","then","response","ok","Error","status","json","data","arr","i","o","push","console","log","catch","error","current","handleTogglePlay","setTimeout","webrtc","signalingClient","peerConnection","stream","srcObject","options","mimeType","recorder","MediaRecorder","ondataavailable","event","size","prev","start","onstop","blob","Blob","type","uploadResult","uploadError","stop","handleGroupChange","target","value","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","action","method","encType","ref","style","width","autoPlay","playsInline","onClick","placeholder","name","onChange","map","post","index","post_title","Date","post_date","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/xuximin/Desktop/499/year-long-project-team-6/app/frontend/src/pages/Post.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport \"../component/CSS/post.css\";\nimport { initializeWebRTC, cleanupWebRTC } from './webrtc';\nimport { uploadVideo } from './webrtc';\nimport { wait } from \"@testing-library/user-event/dist/utils\";\nfunction PostPage() {\n    const [showWebRTC, setShowWebRTC] = useState(false);\n    const [userId, setUserId] = useState(2);\n    const [selectedGroup, setSelectedGroup] = useState(\"\");\n    const [postHistory, setPostHistory] = useState([]);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const signalingClientRef = useRef(null);\n    const peerConnectionRef = useRef(null);\n    const localView = useRef(null);\n    const [mediaRecorder, setMediaRecorder] = useState(null);\n    const [recordedChunks, setRecordedChunks] = useState([]);\n    \n\n    \n\n    const channelARN = 'arn:aws:kinesisvideo:us-east-1:466618866658:channel/webrtc-499/1701571372732';\n    useEffect(() => {\n        fetch(`http://localhost:5001/post-history/${userId}`)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n                return response.json();\n            })\n            .then(data => {\n                const arr = [];\n                for (let i in data) {\n                    let o = {};\n                    o[i] = data[i];\n                    arr.push(o);\n                }\n                console.log(arr[0].data);\n                setPostHistory(arr[0].data);\n            })\n            .catch(error => console.error('Error fetching post history:', error));\n            \n        // Cleanup\n        return () => {\n            cleanupWebRTC(signalingClientRef.current, peerConnectionRef.current);\n        };\n    }, [userId]);\n    useEffect(() => {\n        console.log('recordedChunks updated:', recordedChunks);\n    }, [recordedChunks]);\n    const handleTogglePlay = async () => {\n        console.log('Click - isPlaying:', isPlaying, 'Refs:', localView.current);\n    \n        if (!isPlaying) {\n            setTimeout(async() => {\n            if (localView.current) {\n                try {\n                    const webrtc = await initializeWebRTC(channelARN, localView.current);\n                    signalingClientRef.current = webrtc.signalingClient;\n                    peerConnectionRef.current = webrtc.peerConnection;\n        \n                    // Initialize MediaRecorder here\n                    const stream = localView.current.srcObject; // Assuming this is your local stream\n                    console.log('stream',stream);\n                    const options = { mimeType: 'video/webm; codecs=vp9' };\n                    const recorder = new MediaRecorder(stream, options);\n                     setMediaRecorder(recorder);\n\n                    recorder.ondataavailable = (event) => {\n                       \n                        if (event.data.size > 0) {\n                            console.log('triggered event.data.size > 0')\n                            console.log('datasize',event.data.size)\n                            setRecordedChunks((prev) => [...prev, event.data]);\n                        }\n                    };\n                    \n                    setShowWebRTC(true);\n                    recorder.start();\n                } catch (error) {\n                    console.error('Error initializing WebRTC: ', error);\n                }\n            } else {\n                \n                console.log('Refs are not set:', localView.current);\n            }\n        },100)\n        } else {\n            if (mediaRecorder) {\n\n                mediaRecorder.onstop = async () => {\n                    // Create the blob only after recording has stopped\n                    const blob = new Blob(recordedChunks, { type: 'video/webm' });\n                    console.log('Recording stopped. Blob created:', blob);\n        \n                    // Upload the blob\n                    try {\n                        const uploadResult = await uploadVideo(blob);\n                        console.log('Video uploaded successfully:', uploadResult);\n                        // Handle the upload result as needed\n                    } catch (uploadError) {\n                        console.error('Failed to upload video:', uploadError);\n                    }\n        \n                    // Clear the recorded chunks array\n                    setRecordedChunks([]);\n                };\n                mediaRecorder.stop();\n            }\n            // Cleanup WebRTC connection\n            cleanupWebRTC(signalingClientRef.current, peerConnectionRef.current);\n            signalingClientRef.current = null;\n            peerConnectionRef.current = null;\n            setShowWebRTC(false);\n        }\n        setIsPlaying(!isPlaying);\n    };\n    \n    function handleGroupChange(event) {\n        setSelectedGroup(event.target.value);\n    }\n\n    return (\n        <div id='page'>\n            <div id=\"send\">\n                <h2>Send Your Post</h2>\n            </div>\n            <div className=\"flex-container\">\n                <div id=\"input\">\n                    <form action=\"image.php\" method=\"post\" encType=\"multipart/form-data\">\n                        <div id=\"main\" className=\"main\">\n                        <div id=\"videoContainer\">\n                        {isPlaying && (\n                    <>\n                       <video ref={localView} style={{ width: '640px' }} autoPlay playsInline />\n\n                    </>\n                )}\n                <button type='button' onClick={handleTogglePlay}>{isPlaying ? 'Stop' : 'Start'}</button>\n</div>\n\n                            <div className=\"EnterText\">\n                                <legend>Name your new video</legend>\n                                <input type=\"text\" id=\"VName\" placeholder=\"Video Name\" name=\"VName\" />\n                            </div>\n\n                            <div className=\"EnterText\">\n                                <legend>Choose a Group</legend>\n                                <select id=\"GName\" name=\"GName\" value={selectedGroup} onChange={handleGroupChange}>\n                                    <option value=\"\"></option>\n                                    <option value=\"Sender\">Sender</option>\n                                    <option value=\"Doctor\">Doctor</option>\n                                    <option value=\"Professor\">Professor</option>\n                                </select>\n                            </div>\n\n                            <div className=\"EnterText\">\n                                <legend>Description of Your Video</legend>\n                                <input type=\"text\" id=\"Description\" placeholder=\"Describe your video\" name=\"description\" />\n                            </div>\n                        </div>\n\n                        <div id=\"button\">\n                            <button type=\"submit\" value=\"Submit\" name=\"submit\" id=\"submit\">Submit</button>\n                        </div>\n                    </form>\n                </div>\n                <div id=\"HistroyBar\">\n                    <table id=\"histroyTable\">\n                        <thead>\n                            <tr>\n                                <td>History</td>\n                                <td id=\"Sort\">\n                                    <select id=\"order\" name=\"order\">\n                                        <option value=\"Des\">Descending</option>\n                                        <option value=\"Asc\">Ascending</option>\n                                    </select>\n                                </td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {postHistory.map((post, index) => (\n                                <tr key={index}>\n                                    <td id=\"img\">\n                                        {`${post.post_title}`}\n                                    </td>\n                                    <td id=\"date\">{new Date(post.post_date).toLocaleString()}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default PostPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,2BAA2B;AAClC,SAASC,gBAAgB,EAAEC,aAAa,QAAQ,UAAU;AAC1D,SAASC,WAAW,QAAQ,UAAU;AACtC,SAASC,IAAI,QAAQ,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC9D,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMsB,kBAAkB,GAAGrB,MAAM,CAAC,IAAI,CAAC;EACvC,MAAMsB,iBAAiB,GAAGtB,MAAM,CAAC,IAAI,CAAC;EACtC,MAAMuB,SAAS,GAAGvB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACwB,aAAa,EAAEC,gBAAgB,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAAC2B,cAAc,EAAEC,iBAAiB,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAKxD,MAAM6B,UAAU,GAAG,8EAA8E;EACjG9B,SAAS,CAAC,MAAM;IACZ+B,KAAK,CAAE,sCAAqChB,MAAO,EAAC,CAAC,CAChDiB,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBF,QAAQ,CAACG,MAAO,EAAC,CAAC;MAC7D;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDL,IAAI,CAACM,IAAI,IAAI;MACV,MAAMC,GAAG,GAAG,EAAE;MACd,KAAK,IAAIC,CAAC,IAAIF,IAAI,EAAE;QAChB,IAAIG,CAAC,GAAG,CAAC,CAAC;QACVA,CAAC,CAACD,CAAC,CAAC,GAAGF,IAAI,CAACE,CAAC,CAAC;QACdD,GAAG,CAACG,IAAI,CAACD,CAAC,CAAC;MACf;MACAE,OAAO,CAACC,GAAG,CAACL,GAAG,CAAC,CAAC,CAAC,CAACD,IAAI,CAAC;MACxBlB,cAAc,CAACmB,GAAG,CAAC,CAAC,CAAC,CAACD,IAAI,CAAC;IAC/B,CAAC,CAAC,CACDO,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC,CAAC;;IAEzE;IACA,OAAO,MAAM;MACT1C,aAAa,CAACmB,kBAAkB,CAACwB,OAAO,EAAEvB,iBAAiB,CAACuB,OAAO,CAAC;IACxE,CAAC;EACL,CAAC,EAAE,CAAChC,MAAM,CAAC,CAAC;EACZf,SAAS,CAAC,MAAM;IACZ2C,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEhB,cAAc,CAAC;EAC1D,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EACpB,MAAMoB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjCL,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEvB,SAAS,EAAE,OAAO,EAAEI,SAAS,CAACsB,OAAO,CAAC;IAExE,IAAI,CAAC1B,SAAS,EAAE;MACZ4B,UAAU,CAAC,YAAW;QACtB,IAAIxB,SAAS,CAACsB,OAAO,EAAE;UACnB,IAAI;YACA,MAAMG,MAAM,GAAG,MAAM/C,gBAAgB,CAAC2B,UAAU,EAAEL,SAAS,CAACsB,OAAO,CAAC;YACpExB,kBAAkB,CAACwB,OAAO,GAAGG,MAAM,CAACC,eAAe;YACnD3B,iBAAiB,CAACuB,OAAO,GAAGG,MAAM,CAACE,cAAc;;YAEjD;YACA,MAAMC,MAAM,GAAG5B,SAAS,CAACsB,OAAO,CAACO,SAAS,CAAC,CAAC;YAC5CX,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACS,MAAM,CAAC;YAC5B,MAAME,OAAO,GAAG;cAAEC,QAAQ,EAAE;YAAyB,CAAC;YACtD,MAAMC,QAAQ,GAAG,IAAIC,aAAa,CAACL,MAAM,EAAEE,OAAO,CAAC;YAClD5B,gBAAgB,CAAC8B,QAAQ,CAAC;YAE3BA,QAAQ,CAACE,eAAe,GAAIC,KAAK,IAAK;cAElC,IAAIA,KAAK,CAACtB,IAAI,CAACuB,IAAI,GAAG,CAAC,EAAE;gBACrBlB,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;gBAC5CD,OAAO,CAACC,GAAG,CAAC,UAAU,EAACgB,KAAK,CAACtB,IAAI,CAACuB,IAAI,CAAC;gBACvChC,iBAAiB,CAAEiC,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEF,KAAK,CAACtB,IAAI,CAAC,CAAC;cACtD;YACJ,CAAC;YAEDxB,aAAa,CAAC,IAAI,CAAC;YACnB2C,QAAQ,CAACM,KAAK,CAAC,CAAC;UACpB,CAAC,CAAC,OAAOjB,KAAK,EAAE;YACZH,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;UACvD;QACJ,CAAC,MAAM;UAEHH,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEnB,SAAS,CAACsB,OAAO,CAAC;QACvD;MACJ,CAAC,EAAC,GAAG,CAAC;IACN,CAAC,MAAM;MACH,IAAIrB,aAAa,EAAE;QAEfA,aAAa,CAACsC,MAAM,GAAG,YAAY;UAC/B;UACA,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACtC,cAAc,EAAE;YAAEuC,IAAI,EAAE;UAAa,CAAC,CAAC;UAC7DxB,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEqB,IAAI,CAAC;;UAErD;UACA,IAAI;YACA,MAAMG,YAAY,GAAG,MAAM/D,WAAW,CAAC4D,IAAI,CAAC;YAC5CtB,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEwB,YAAY,CAAC;YACzD;UACJ,CAAC,CAAC,OAAOC,WAAW,EAAE;YAClB1B,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEuB,WAAW,CAAC;UACzD;;UAEA;UACAxC,iBAAiB,CAAC,EAAE,CAAC;QACzB,CAAC;QACDH,aAAa,CAAC4C,IAAI,CAAC,CAAC;MACxB;MACA;MACAlE,aAAa,CAACmB,kBAAkB,CAACwB,OAAO,EAAEvB,iBAAiB,CAACuB,OAAO,CAAC;MACpExB,kBAAkB,CAACwB,OAAO,GAAG,IAAI;MACjCvB,iBAAiB,CAACuB,OAAO,GAAG,IAAI;MAChCjC,aAAa,CAAC,KAAK,CAAC;IACxB;IACAQ,YAAY,CAAC,CAACD,SAAS,CAAC;EAC5B,CAAC;EAED,SAASkD,iBAAiBA,CAACX,KAAK,EAAE;IAC9B1C,gBAAgB,CAAC0C,KAAK,CAACY,MAAM,CAACC,KAAK,CAAC;EACxC;EAEA,oBACIjE,OAAA;IAAKkE,EAAE,EAAC,MAAM;IAAAC,QAAA,gBACVnE,OAAA;MAAKkE,EAAE,EAAC,MAAM;MAAAC,QAAA,eACVnE,OAAA;QAAAmE,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eACNvE,OAAA;MAAKwE,SAAS,EAAC,gBAAgB;MAAAL,QAAA,gBAC3BnE,OAAA;QAAKkE,EAAE,EAAC,OAAO;QAAAC,QAAA,eACXnE,OAAA;UAAMyE,MAAM,EAAC,WAAW;UAACC,MAAM,EAAC,MAAM;UAACC,OAAO,EAAC,qBAAqB;UAAAR,QAAA,gBAChEnE,OAAA;YAAKkE,EAAE,EAAC,MAAM;YAACM,SAAS,EAAC,MAAM;YAAAL,QAAA,gBAC/BnE,OAAA;cAAKkE,EAAE,EAAC,gBAAgB;cAAAC,QAAA,GACvBtD,SAAS,iBACdb,OAAA,CAAAE,SAAA;gBAAAiE,QAAA,eACGnE,OAAA;kBAAO4E,GAAG,EAAE3D,SAAU;kBAAC4D,KAAK,EAAE;oBAAEC,KAAK,EAAE;kBAAQ,CAAE;kBAACC,QAAQ;kBAACC,WAAW;gBAAA;kBAAAZ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC,gBAE1E,CACL,eACDvE,OAAA;gBAAQ2D,IAAI,EAAC,QAAQ;gBAACsB,OAAO,EAAEzC,gBAAiB;gBAAA2B,QAAA,EAAEtD,SAAS,GAAG,MAAM,GAAG;cAAO;gBAAAuD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnG,CAAC,eAEsBvE,OAAA;cAAKwE,SAAS,EAAC,WAAW;cAAAL,QAAA,gBACtBnE,OAAA;gBAAAmE,QAAA,EAAQ;cAAmB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACpCvE,OAAA;gBAAO2D,IAAI,EAAC,MAAM;gBAACO,EAAE,EAAC,OAAO;gBAACgB,WAAW,EAAC,YAAY;gBAACC,IAAI,EAAC;cAAO;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrE,CAAC,eAENvE,OAAA;cAAKwE,SAAS,EAAC,WAAW;cAAAL,QAAA,gBACtBnE,OAAA;gBAAAmE,QAAA,EAAQ;cAAc;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC/BvE,OAAA;gBAAQkE,EAAE,EAAC,OAAO;gBAACiB,IAAI,EAAC,OAAO;gBAAClB,KAAK,EAAExD,aAAc;gBAAC2E,QAAQ,EAAErB,iBAAkB;gBAAAI,QAAA,gBAC9EnE,OAAA;kBAAQiE,KAAK,EAAC;gBAAE;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAS,CAAC,eAC1BvE,OAAA;kBAAQiE,KAAK,EAAC,QAAQ;kBAAAE,QAAA,EAAC;gBAAM;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACtCvE,OAAA;kBAAQiE,KAAK,EAAC,QAAQ;kBAAAE,QAAA,EAAC;gBAAM;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACtCvE,OAAA;kBAAQiE,KAAK,EAAC,WAAW;kBAAAE,QAAA,EAAC;gBAAS;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC,eAENvE,OAAA;cAAKwE,SAAS,EAAC,WAAW;cAAAL,QAAA,gBACtBnE,OAAA;gBAAAmE,QAAA,EAAQ;cAAyB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC1CvE,OAAA;gBAAO2D,IAAI,EAAC,MAAM;gBAACO,EAAE,EAAC,aAAa;gBAACgB,WAAW,EAAC,qBAAqB;gBAACC,IAAI,EAAC;cAAa;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1F,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eAENvE,OAAA;YAAKkE,EAAE,EAAC,QAAQ;YAAAC,QAAA,eACZnE,OAAA;cAAQ2D,IAAI,EAAC,QAAQ;cAACM,KAAK,EAAC,QAAQ;cAACkB,IAAI,EAAC,QAAQ;cAACjB,EAAE,EAAC,QAAQ;cAAAC,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7E,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNvE,OAAA;QAAKkE,EAAE,EAAC,YAAY;QAAAC,QAAA,eAChBnE,OAAA;UAAOkE,EAAE,EAAC,cAAc;UAAAC,QAAA,gBACpBnE,OAAA;YAAAmE,QAAA,eACInE,OAAA;cAAAmE,QAAA,gBACInE,OAAA;gBAAAmE,QAAA,EAAI;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAChBvE,OAAA;gBAAIkE,EAAE,EAAC,MAAM;gBAAAC,QAAA,eACTnE,OAAA;kBAAQkE,EAAE,EAAC,OAAO;kBAACiB,IAAI,EAAC,OAAO;kBAAAhB,QAAA,gBAC3BnE,OAAA;oBAAQiE,KAAK,EAAC,KAAK;oBAAAE,QAAA,EAAC;kBAAU;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACvCvE,OAAA;oBAAQiE,KAAK,EAAC,KAAK;oBAAAE,QAAA,EAAC;kBAAS;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACRvE,OAAA;YAAAmE,QAAA,EACKxD,WAAW,CAAC0E,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACzBvF,OAAA;cAAAmE,QAAA,gBACInE,OAAA;gBAAIkE,EAAE,EAAC,KAAK;gBAAAC,QAAA,EACN,GAAEmB,IAAI,CAACE,UAAW;cAAC;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrB,CAAC,eACLvE,OAAA;gBAAIkE,EAAE,EAAC,MAAM;gBAAAC,QAAA,EAAE,IAAIsB,IAAI,CAACH,IAAI,CAACI,SAAS,CAAC,CAACC,cAAc,CAAC;cAAC;gBAAAvB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA,GAJzDgB,KAAK;cAAAnB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKV,CACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACnE,EAAA,CA7LQD,QAAQ;AAAAyF,EAAA,GAARzF,QAAQ;AA+LjB,eAAeA,QAAQ;AAAC,IAAAyF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}