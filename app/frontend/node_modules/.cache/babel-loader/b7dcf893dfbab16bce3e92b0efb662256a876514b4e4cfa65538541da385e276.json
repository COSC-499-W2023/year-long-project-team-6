{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitbash\\\\year-long-project-team-6\\\\app\\\\frontend\\\\src\\\\pages\\\\UserProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport SamplePicture from '../component/image/AvatarForProfile.png';\nimport testPicture from '../component/image/profileDefault.jpg';\nimport \"../component/CSS/profile.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserProfile = () => {\n  _s();\n  const [user, setUser] = useState({\n    userid: '',\n    username: '',\n    email: '',\n    user_image: '',\n    gender: '',\n    birthday: null\n  });\n  const [isImageFullScreen, setIsImageFullScreen] = useState(false);\n  const [isHovering, setIsHovering] = useState(false);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [error, setError] = useState('');\n  const [userId, setId] = useState('');\n  const navigate = useNavigate();\n  const fileInputRef = useRef(null);\n  const handleMouseOver = () => setIsHovering(true);\n  const handleMouseOut = () => setIsHovering(false);\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\n  const [showChangePasswordModal, setShowChangePasswordModal] = useState(false);\n  const [passwError, setPasswError] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showCurrentPassword, setShowCurrentPassword] = useState(false);\n  const [showNewPassword, setShowNewPassword] = useState(false);\n  const [showConfirmNewPassword, setShowConfirmNewPassword] = useState(false);\n\n  // In order to automatically update the interface, we define a function that will be contained in the useEffect. \n  const fetchUserProfile = () => {\n    return new Promise((resolve, reject) => {\n      const sessionUser = sessionStorage.getItem('user');\n      if (!sessionUser) {\n        navigate('/login');\n        reject();\n      } else {\n        const user = JSON.parse(sessionUser);\n        setUser(user);\n        if (user.userid) {\n          fetch(`http://localhost:5001/get-profile/${user.userid}`).then(response => {\n            if (!response.ok) {\n              throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            return response.json();\n          }).then(data => {\n            if (data.birthday) {\n              data.birthday = data.birthday.split('T')[0];\n            }\n            if (data.user_image) {\n              const imageUrl = `data:image/*;base64,${data.user_image}`;\n              data.user_image = imageUrl;\n            } else {\n              data.user_image = testPicture;\n            }\n            setUser({\n              userid: user.userid,\n              username: data.username,\n              email: data.email,\n              user_image: data.user_image || SamplePicture,\n              gender: data.gender || '',\n              birthday: data.birthday || null\n            });\n            resolve(data); // Resolve with the fetched data\n          }).catch(error => {\n            console.error('Error fetching posts:', error);\n            reject(error);\n          });\n        }\n      }\n    });\n  };\n  useEffect(() => {\n    fetchUserProfile();\n  }, [navigate]);\n  const handleAvatarClick = () => {\n    // Trigger file input when the avatar image is clicked\n    if (!isEditMode) {\n      setIsImageFullScreen(!isImageFullScreen);\n    } else {\n      fileInputRef.current.click();\n    }\n  };\n  const handleInputChange = e => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleEditClick = () => {\n    setIsEditMode(true);\n  };\n  const handleCancelClick = () => {\n    setIsEditMode(false);\n    fetchUserProfile();\n  };\n  const handleSaveClick = () => {\n    console.log('Session User:', user);\n    axios.put(`http://localhost:5001/edit-profile/${user.userid}`, user).then(response => {\n      console.log('Profile updated:', response.data);\n      fetchUserProfile() // Fetch updated user data\n      .then(() => {\n        setIsEditMode(false);\n        alert(\"Information updated!\");\n      }).catch(error => {\n        console.error('Error updating user profile:', error);\n        setError('Failed to update profile.');\n      });\n    }).catch(error => {\n      console.error('Error:', error);\n      setError('Failed to update profile.');\n    });\n  };\n  const handleFileSelect = event => {\n    const file = event.target.files[0]; // Assuming single file selection\n    if (!file) {\n      return;\n    }\n\n    // Check if file size is less than or equal to 200KB (200 * 1024 bytes)\n    if (file.size > 200 * 1024) {\n      alert('Please select a file smaller than 200KB.');\n      return;\n    }\n\n    // Check if file type is jpg, png, or gif\n    const validTypes = ['image/jpeg', 'image/png', 'image/gif'];\n    if (!validTypes.includes(file.type)) {\n      alert('Please select a file of type JPG, PNG, or GIF.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('avatar', file);\n    axios.post(`http://localhost:5001/upload-avatar/${user.userid}`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      console.log('Avatar updated successfully', response.data);\n      fetchUserProfile();\n    }).catch(error => {\n      console.error('Error uploading avatar:', error);\n    });\n  };\n  const validatePassw = () => {\n    const isLengthValid = newPassword.length >= 6 && newPassword.length <= 30;\n    const hasDigit = /\\d/.test(newPassword);\n    const hasLetter = /[a-zA-Z]/.test(newPassword);\n    const hasSymbol = /[^a-zA-Z\\d]/.test(newPassword);\n    if (isLengthValid && hasDigit && hasLetter && hasSymbol) {\n      setPasswError(false);\n      return true;\n    } else {\n      setPasswError(true);\n      return false;\n    }\n  };\n  const changePassword = () => {\n    if (!currentPassword && !newPassword && !confirmNewPassword) {\n      alert(\"Fields cannot be empty!\");\n      return;\n    }\n    if (newPassword !== confirmNewPassword) {\n      alert('New password and confirmed password do not match!');\n      return;\n    }\n    if (!validatePassw()) {\n      alert(\"New password format is wrong! Make sure you have letters, digits and symbols\");\n      return;\n    }\n    if (!currentPassword && newPassword === confirmNewPassword) {\n      alert(\"Please verify your current password!\");\n      return;\n    }\n    if (newPassword === currentPassword) {\n      // Check if new password is the same as the old one\n      alert(\"New password cannot be the same as the old password!\");\n      return;\n    }\n    axios.put(`http://localhost:5001/update-password/${userId}`, {\n      currentPassword,\n      newPassword\n    }).then(response => {\n      console.log('Password changed:', response.data);\n      alert(\"Password changed successfully!\");\n      closeEditPassWord();\n    }).catch(error => {\n      console.error('Error:', error);\n      if (error.response && error.response.data === 'Current password is incorrect') {\n        alert(\"Current password is incorrect!\");\n        setCurrentPassword('');\n        setNewPassword('');\n        setConfirmNewPassword('');\n      } else {\n        setError('Failed to change password!');\n      }\n    });\n  };\n  const closeEditPassWord = () => {\n    setShowChangePasswordModal(false);\n    setCurrentPassword('');\n    setNewPassword('');\n    setConfirmNewPassword('');\n  };\n  const renderPasswordForm = () => {\n    if (showChangePasswordModal) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-backdrop\",\n        onClick: () => setShowChangePasswordModal(false),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"close\",\n            onClick: closeEditPassWord,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"change-password-modal\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"old\",\n              children: \"Old password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: showCurrentPassword ? \"text\" : \"password\",\n                placeholder: \"Current Password\",\n                value: currentPassword,\n                onChange: e => setCurrentPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"show-password-icon\",\n                onClick: () => setShowCurrentPassword(!showCurrentPassword),\n                children: !showCurrentPassword ? \"show\" : \"hide\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"new\",\n              children: \"New password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: showNewPassword ? \"text\" : \"password\",\n                placeholder: \"Letters, digits and symbols\",\n                value: newPassword,\n                onChange: e => setNewPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"show-password-icon\",\n                onClick: () => setShowNewPassword(!showNewPassword),\n                children: !showNewPassword ? \"show\" : \"hide\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"confirm\",\n              children: \"Confirmed password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: showConfirmNewPassword ? \"text\" : \"password\",\n                placeholder: \"Letters, digits and symbols\",\n                value: confirmNewPassword,\n                onChange: e => setConfirmNewPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"show-password-icon\",\n                onClick: () => setShowConfirmNewPassword(!showConfirmNewPassword),\n                children: !showConfirmNewPassword ? \"show\" : \"hide\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: changePassword,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeEditPassWord,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-profile\",\n    children: [isImageFullScreen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"darken-background\",\n      onClick: () => setIsImageFullScreen(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fullscreen-image-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.user_image,\n          alt: `${user.username}'s profile`,\n          className: \"fullscreen-image enlarge-image\",\n          onClick: e => e.stopPropagation() // \n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"avatar-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar-hover\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.user_image,\n          alt: `${user.username}'s profile`,\n          onClick: handleAvatarClick,\n          style: {\n            cursor: 'pointer'\n          },\n          title: !isEditMode ? \"Check Avatar\" : \"Change Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }, this), isEditMode && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"hovering-text\",\n          children: \"Change Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }, this), isEditMode ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save-profile\",\n        onClick: handleSaveClick,\n        hidden: \"hidden\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"edit-profile\",\n        onClick: handleEditClick,\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }, this), isEditMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"changePassw\",\n        type: \"button\",\n        onClick: () => setShowChangePasswordModal(true),\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: renderPasswordForm()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"change-avatar-button\",\n        onClick: handleAvatarClick,\n        children: \"Change Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileSelect,\n        ref: fileInputRef,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: user.username,\n          onChange: handleInputChange,\n          id: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Gender:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"gender\",\n          value: \"Male\",\n          checked: user.gender === \"Male\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Male\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 136\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"gender\",\n          value: \"Female\",\n          checked: user.gender === \"Female\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Female\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 140\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"gender\",\n          value: \"Other\",\n          checked: user.gender === \"Other\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Other\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 138\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Birth Date: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"birthday\",\n          value: user.birthday,\n          onChange: handleInputChange,\n          id: \"birthday\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save-profile\",\n        onClick: handleSaveClick,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cancel-profile\",\n        onClick: handleCancelClick,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Username: \", user.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 24\n        }, this), user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Gender: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 24\n        }, this), user.gender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Birth Date: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 24\n        }, this), user.birthday]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 296,\n    columnNumber: 9\n  }, this);\n};\n_s(UserProfile, \"omloIwdTSGR5MnFCnomCsykaXE0=\", false, function () {\n  return [useNavigate];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","useNavigate","SamplePicture","testPicture","jsxDEV","_jsxDEV","Fragment","_Fragment","UserProfile","_s","user","setUser","userid","username","email","user_image","gender","birthday","isImageFullScreen","setIsImageFullScreen","isHovering","setIsHovering","isEditMode","setIsEditMode","error","setError","userId","setId","navigate","fileInputRef","handleMouseOver","handleMouseOut","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","showChangePasswordModal","setShowChangePasswordModal","passwError","setPasswError","showPassword","setShowPassword","showCurrentPassword","setShowCurrentPassword","showNewPassword","setShowNewPassword","showConfirmNewPassword","setShowConfirmNewPassword","fetchUserProfile","Promise","resolve","reject","sessionUser","sessionStorage","getItem","JSON","parse","fetch","then","response","ok","Error","status","json","data","split","imageUrl","catch","console","handleAvatarClick","current","click","handleInputChange","e","target","name","value","handleEditClick","handleCancelClick","handleSaveClick","log","put","alert","handleFileSelect","event","file","files","size","validTypes","includes","type","formData","FormData","append","post","headers","validatePassw","isLengthValid","length","hasDigit","test","hasLetter","hasSymbol","changePassword","closeEditPassWord","renderPasswordForm","className","onClick","children","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","id","placeholder","onChange","src","alt","style","cursor","title","hidden","ref","display","checked","_c","$RefreshReg$"],"sources":["D:/gitbash/year-long-project-team-6/app/frontend/src/pages/UserProfile.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport SamplePicture from '../component/image/AvatarForProfile.png';\r\nimport testPicture from '../component/image/profileDefault.jpg';\r\nimport \"../component/CSS/profile.css\";\r\n\r\nconst UserProfile = () => {\r\n    const [user, setUser] = useState({\r\n        userid: '',\r\n        username: '',\r\n        email: '',\r\n        user_image: '',\r\n        gender: '',\r\n        birthday: null,\r\n    });\r\n    const [isImageFullScreen, setIsImageFullScreen] = useState(false);\r\n    const [isHovering, setIsHovering] = useState(false);\r\n    const [isEditMode, setIsEditMode] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [userId, setId] = useState('');\r\n    const navigate = useNavigate();\r\n    const fileInputRef = useRef(null);\r\n    const handleMouseOver = () => setIsHovering(true);\r\n    const handleMouseOut = () => setIsHovering(false);\r\n    const [currentPassword, setCurrentPassword] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmNewPassword, setConfirmNewPassword] = useState('');\r\n    const [showChangePasswordModal, setShowChangePasswordModal] = useState(false);\r\n    const [passwError, setPasswError] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [showCurrentPassword, setShowCurrentPassword] = useState(false);\r\n    const [showNewPassword, setShowNewPassword] = useState(false);\r\n    const [showConfirmNewPassword, setShowConfirmNewPassword] = useState(false);\r\n\r\n\r\n    // In order to automatically update the interface, we define a function that will be contained in the useEffect. \r\n    const fetchUserProfile = () => {\r\n        return new Promise((resolve, reject) => {\r\n            const sessionUser = sessionStorage.getItem('user');\r\n            if (!sessionUser) {\r\n                navigate('/login');\r\n                reject();\r\n            } else {\r\n                const user = JSON.parse(sessionUser);\r\n                setUser(user);\r\n                if (user.userid) {\r\n                    fetch(`http://localhost:5001/get-profile/${user.userid}`)\r\n                        .then(response => {\r\n                            if (!response.ok) {\r\n                                throw new Error(`HTTP error! status: ${response.status}`);\r\n                            }\r\n                            return response.json();\r\n                        })\r\n                        .then(data => {\r\n                            if (data.birthday) {\r\n                                data.birthday = data.birthday.split('T')[0];\r\n                            }\r\n                            if (data.user_image) {\r\n                                const imageUrl = `data:image/*;base64,${data.user_image}`;\r\n                                data.user_image = imageUrl;\r\n                            } else {\r\n                                data.user_image = testPicture;\r\n                            }\r\n                            setUser({\r\n                                userid: user.userid,\r\n                                username: data.username,\r\n                                email: data.email,\r\n                                user_image: data.user_image || SamplePicture,\r\n                                gender: data.gender || '',\r\n                                birthday: data.birthday || null,\r\n                            });\r\n                            resolve(data); // Resolve with the fetched data\r\n                        })\r\n                        .catch(error => {\r\n                            console.error('Error fetching posts:', error);\r\n                            reject(error);\r\n                        });\r\n                }\r\n            }\r\n        });\r\n    };\r\n    useEffect(() => {\r\n        fetchUserProfile();\r\n    }, [navigate]);\r\n    const handleAvatarClick = () => {\r\n        // Trigger file input when the avatar image is clicked\r\n        if (!isEditMode) {\r\n            setIsImageFullScreen(!isImageFullScreen);\r\n        } else {\r\n            fileInputRef.current.click();\r\n        }\r\n    };\r\n    const handleInputChange = (e) => {\r\n        setUser({ ...user, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleEditClick = () => {\r\n        setIsEditMode(true);\r\n    };\r\n\r\n    const handleCancelClick = () => {\r\n        setIsEditMode(false);\r\n        fetchUserProfile();\r\n    };\r\n\r\n\r\n    const handleSaveClick = () => {\r\n        console.log('Session User:', user);\r\n        axios.put(`http://localhost:5001/edit-profile/${user.userid}`, user)\r\n            .then(response => {\r\n                console.log('Profile updated:', response.data);\r\n                fetchUserProfile() // Fetch updated user data\r\n                    .then(() => {\r\n                        setIsEditMode(false);\r\n                        alert(\"Information updated!\");\r\n                    })\r\n                    .catch(error => {\r\n                        console.error('Error updating user profile:', error);\r\n                        setError('Failed to update profile.');\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                console.error('Error:', error);\r\n                setError('Failed to update profile.');\r\n            });\r\n    };\r\n    const handleFileSelect = (event) => {\r\n        const file = event.target.files[0]; // Assuming single file selection\r\n        if (!file) {\r\n            return;\r\n        }\r\n    \r\n        // Check if file size is less than or equal to 200KB (200 * 1024 bytes)\r\n        if (file.size > 200 * 1024) {\r\n            alert('Please select a file smaller than 200KB.');\r\n            return;\r\n        }\r\n    \r\n        // Check if file type is jpg, png, or gif\r\n        const validTypes = ['image/jpeg', 'image/png', 'image/gif'];\r\n        if (!validTypes.includes(file.type)) {\r\n            alert('Please select a file of type JPG, PNG, or GIF.');\r\n            return;\r\n        }\r\n    \r\n        const formData = new FormData();\r\n        formData.append('avatar', file);\r\n        axios.post(`http://localhost:5001/upload-avatar/${user.userid}`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n            },\r\n        })\r\n            .then(response => {\r\n                console.log('Avatar updated successfully', response.data);\r\n                fetchUserProfile();\r\n            })\r\n            .catch(error => {\r\n                console.error('Error uploading avatar:', error);\r\n            });\r\n    };\r\n    const validatePassw = () => {\r\n        const isLengthValid = newPassword.length >= 6 && newPassword.length <= 30;\r\n        const hasDigit = /\\d/.test(newPassword);\r\n        const hasLetter = /[a-zA-Z]/.test(newPassword);\r\n        const hasSymbol = /[^a-zA-Z\\d]/.test(newPassword);\r\n\r\n        if (isLengthValid && hasDigit && hasLetter && hasSymbol) {\r\n            setPasswError(false);\r\n            return (true);\r\n        } else {\r\n            setPasswError(true);\r\n            return (false);\r\n        }\r\n    };\r\n\r\n    const changePassword = () => {\r\n        if (!currentPassword && !newPassword && !confirmNewPassword) {\r\n            alert(\"Fields cannot be empty!\");\r\n            return;\r\n        }\r\n        if (newPassword !== confirmNewPassword) {\r\n            alert('New password and confirmed password do not match!');\r\n            return;\r\n        }\r\n        if (!validatePassw()) {\r\n            alert(\"New password format is wrong! Make sure you have letters, digits and symbols\");\r\n            return;\r\n        }\r\n        if (!currentPassword && newPassword === confirmNewPassword) {\r\n            alert(\"Please verify your current password!\");\r\n            return;\r\n        }\r\n        if (newPassword === currentPassword) { // Check if new password is the same as the old one\r\n            alert(\"New password cannot be the same as the old password!\");\r\n            return;\r\n        }\r\n\r\n        axios.put(`http://localhost:5001/update-password/${userId}`, {\r\n            currentPassword,\r\n            newPassword\r\n        })\r\n            .then(response => {\r\n                console.log('Password changed:', response.data);\r\n                alert(\"Password changed successfully!\");\r\n                closeEditPassWord();\r\n            })\r\n            .catch(error => {\r\n                console.error('Error:', error);\r\n                if (error.response && error.response.data === 'Current password is incorrect') {\r\n                    alert(\"Current password is incorrect!\");\r\n                    setCurrentPassword('');\r\n                    setNewPassword('');\r\n                    setConfirmNewPassword('');\r\n                } else {\r\n                    setError('Failed to change password!');\r\n                }\r\n            });\r\n    };\r\n\r\n\r\n    const closeEditPassWord = () => {\r\n        setShowChangePasswordModal(false);\r\n        setCurrentPassword('');\r\n        setNewPassword('');\r\n        setConfirmNewPassword('');\r\n    };\r\n\r\n    const renderPasswordForm = () => {\r\n        if (showChangePasswordModal) {\r\n            return (\r\n                <div className=\"modal-backdrop\" onClick={() => setShowChangePasswordModal(false)}>\r\n                    <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\r\n                        <span className=\"close\" onClick={closeEditPassWord}>&times;</span>\r\n                        <div className=\"change-password-modal\">\r\n                            <p id='old'>Old password:</p>\r\n                            <div className=\"input-container\">\r\n                                <input\r\n                                    type={showCurrentPassword ? \"text\" : \"password\"}\r\n                                    placeholder=\"Current Password\"\r\n                                    value={currentPassword}\r\n                                    onChange={(e) => setCurrentPassword(e.target.value)}\r\n                                />\r\n                                <span\r\n                                    className=\"show-password-icon\"\r\n                                    onClick={() => setShowCurrentPassword(!showCurrentPassword)}\r\n                                >\r\n                                    {!showCurrentPassword ? \"show\" : \"hide\"}\r\n                                </span>\r\n                            </div>\r\n\r\n                            <p id='new'>New password:</p>\r\n                            <div className=\"input-container\">\r\n                                <input\r\n                                    type={showNewPassword ? \"text\" : \"password\"}\r\n                                    placeholder=\"Letters, digits and symbols\"\r\n                                    value={newPassword}\r\n                                    onChange={(e) => setNewPassword(e.target.value)}\r\n                                />\r\n                                <span\r\n                                    className=\"show-password-icon\"\r\n                                    onClick={() => setShowNewPassword(!showNewPassword)}\r\n                                >\r\n                                    {!showNewPassword ? \"show\" : \"hide\"}\r\n                                </span>\r\n                            </div>\r\n\r\n                            <p id='confirm'>Confirmed password:</p>\r\n                            <div className=\"input-container\">\r\n                                <input\r\n                                    type={showConfirmNewPassword ? \"text\" : \"password\"}\r\n                                    placeholder=\"Letters, digits and symbols\"\r\n                                    value={confirmNewPassword}\r\n                                    onChange={(e) => setConfirmNewPassword(e.target.value)}\r\n                                />\r\n                                <span\r\n                                    className=\"show-password-icon\"\r\n                                    onClick={() => setShowConfirmNewPassword(!showConfirmNewPassword)}\r\n                                >\r\n                                    {!showConfirmNewPassword ? \"show\" : \"hide\"}\r\n                                </span>\r\n                            </div>\r\n\r\n                            <p></p>\r\n                            <button onClick={changePassword}>Submit</button>\r\n                            <button onClick={closeEditPassWord}>Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return null;\r\n    };\r\n\r\n    return (\r\n        <div className=\"user-profile\">\r\n            {isImageFullScreen && (\r\n                <div className=\"darken-background\" onClick={() => setIsImageFullScreen(false)}>\r\n                    <div className=\"fullscreen-image-container\">\r\n                        <img\r\n                            src={user.user_image}\r\n                            alt={`${user.username}'s profile`}\r\n                            className=\"fullscreen-image enlarge-image\"\r\n                            onClick={(e) => e.stopPropagation()} // \r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n            <div className=\"avatar-container\">\r\n                <div className=\"avatar-hover\">\r\n                    <img\r\n                        src={user.user_image}\r\n                        alt={`${user.username}'s profile`}\r\n                        onClick={handleAvatarClick}\r\n                        style={{ cursor: 'pointer' }}\r\n                        title={!isEditMode ? \"Check Avatar\" : \"Change Avatar\"}\r\n                    />\r\n                    {isEditMode && <span className=\"hovering-text\">Change Avatar</span>}\r\n                </div>\r\n\r\n                {isEditMode ? (\r\n                    <button className=\"save-profile\" onClick={handleSaveClick} hidden=\"hidden\">Save</button>\r\n                ) : (\r\n                    <button className=\"edit-profile\" onClick={handleEditClick}>Edit Profile</button>\r\n                )}\r\n            </div>\r\n\r\n            {isEditMode ? (\r\n                <>\r\n                    <button className=\"changePassw\" type=\"button\" onClick={() => setShowChangePasswordModal(true)}>Change Password</button>\r\n                    <div>{renderPasswordForm()}</div>\r\n                    <button className=\"change-avatar-button\" onClick={handleAvatarClick}>Change Avatar</button>\r\n                    <input type=\"file\" onChange={handleFileSelect} ref={fileInputRef} style={{ display: 'none' }} />\r\n                    <p>Name: <input type=\"text\" name=\"username\" value={user.username} onChange={handleInputChange} id='username' /></p>\r\n                    <p>Gender:\r\n                        <input type=\"radio\" name=\"gender\" value=\"Male\" checked={user.gender === \"Male\"} onChange={handleInputChange} /><label>Male</label>\r\n                        <input type=\"radio\" name=\"gender\" value=\"Female\" checked={user.gender === \"Female\"} onChange={handleInputChange} /><label>Female</label>\r\n                        <input type=\"radio\" name=\"gender\" value=\"Other\" checked={user.gender === \"Other\"} onChange={handleInputChange} /><label>Other</label>\r\n                    </p>\r\n                    <p>Birth Date: <input type=\"date\" name=\"birthday\" value={user.birthday} onChange={handleInputChange} id='birthday' /></p>\r\n                    <button className=\"save-profile\" onClick={handleSaveClick}>Save</button>\r\n                    <button className=\"cancel-profile\" onClick={handleCancelClick}>Cancel</button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h1>Username: {user.username}</h1>\r\n                    <p><strong>Email: </strong>{user.email}</p>\r\n                    <p><strong>Gender: </strong>{user.gender}</p>\r\n                    <p><strong>Birth Date: </strong>{user.birthday}</p>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default UserProfile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}