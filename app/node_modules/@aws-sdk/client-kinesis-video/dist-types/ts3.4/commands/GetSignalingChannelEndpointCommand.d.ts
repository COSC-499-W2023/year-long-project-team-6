import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  KinesisVideoClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../KinesisVideoClient";
import {
  GetSignalingChannelEndpointInput,
  GetSignalingChannelEndpointOutput,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface GetSignalingChannelEndpointCommandInput
  extends GetSignalingChannelEndpointInput {}
export interface GetSignalingChannelEndpointCommandOutput
  extends GetSignalingChannelEndpointOutput,
    __MetadataBearer {}
export declare class GetSignalingChannelEndpointCommand extends $Command<
  GetSignalingChannelEndpointCommandInput,
  GetSignalingChannelEndpointCommandOutput,
  KinesisVideoClientResolvedConfig
> {
  readonly input: GetSignalingChannelEndpointCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: GetSignalingChannelEndpointCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: KinesisVideoClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    GetSignalingChannelEndpointCommandInput,
    GetSignalingChannelEndpointCommandOutput
  >;
  private serialize;
  private deserialize;
}
