import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
  StreamingBlobPayloadOutputTypes,
} from "@smithy/types";
import {
  KinesisVideoMediaClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../KinesisVideoMediaClient";
import { GetMediaInput, GetMediaOutput } from "../models/models_0";
export { __MetadataBearer, $Command };
export interface GetMediaCommandInput extends GetMediaInput {}
export interface GetMediaCommandOutput
  extends Pick<GetMediaOutput, Exclude<keyof GetMediaOutput, "Payload">>,
    __MetadataBearer {
  Payload?: StreamingBlobPayloadOutputTypes;
}
export declare class GetMediaCommand extends $Command<
  GetMediaCommandInput,
  GetMediaCommandOutput,
  KinesisVideoMediaClientResolvedConfig
> {
  readonly input: GetMediaCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: GetMediaCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: KinesisVideoMediaClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<GetMediaCommandInput, GetMediaCommandOutput>;
  private serialize;
  private deserialize;
}
